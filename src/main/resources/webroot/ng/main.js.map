{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-tree/angular-tree.component.css","webpack:///./src/app/angular-tree/angular-tree.component.html","webpack:///./src/app/angular-tree/angular-tree.component.ts","webpack:///./src/app/angular-tree/angular-tree.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/contextmenu/contextmenu.component.css","webpack:///./src/app/contextmenu/contextmenu.component.html","webpack:///./src/app/contextmenu/contextmenu.component.ts","webpack:///./src/app/create/create.component.css","webpack:///./src/app/create/create.component.html","webpack:///./src/app/create/create.component.ts","webpack:///./src/app/create/create.service.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/edit/edit.service.ts","webpack:///./src/app/form-data-interface.ts","webpack:///./src/app/form-data.service.ts","webpack:///./src/app/generate-form/generate-form.component.css","webpack:///./src/app/generate-form/generate-form.component.html","webpack:///./src/app/generate-form/generate-form.component.ts","webpack:///./src/app/generate-form/generate-form.service.ts","webpack:///./src/app/jstree/jstree.component.css","webpack:///./src/app/jstree/jstree.component.html","webpack:///./src/app/jstree/jstree.component.ts","webpack:///./src/app/uploader/uploader.component.css","webpack:///./src/app/uploader/uploader.component.html","webpack:///./src/app/uploader/uploader.component.ts","webpack:///./src/app/uploader/uploader.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".menu {\\n  position: absolute;\\n  background: rgba(255, 255, 255, 0.9);\\n  padding: 7px;\\n  border-radius: 5px;\\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.2);\\n}\\n\\nul {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\nli {\\n  padding: 7px;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\nli:hover {\\n  background-color: aliceblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5ndWxhci10cmVlL2FuZ3VsYXItdHJlZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLG9DQUFvQztFQUNwQyxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLDBDQUEwQztBQUM1Qzs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsU0FBUztBQUNYOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvYW5ndWxhci10cmVlL2FuZ3VsYXItdHJlZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lbnUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgcGFkZGluZzogN3B4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJveC1zaGFkb3c6IDAgMCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmxpIHtcbiAgcGFkZGluZzogN3B4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxubGk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XG59Il19 */\"","module.exports = \"<div>\\n    <tree-root #tree [nodes]=\\\"nodes\\\" [options]=\\\"options\\\" [focused]=\\\"true\\\" draggable>\\n        <ng-template #treeNodeTemplate let-node=\\\"node\\\">\\n            <span *ngIf=\\\"node === editNode\\\">{{ node.data.pureName }}\\n                <input *ngIf=\\\" (node.data.style!=='textarea') \\\" type={{node.data.style}} autofocus [(ngModel)]=\\\"node.data.editVal\\\" (change)=\\\"stopEdit()\\\" (keyup.enter)=\\\"stopEdit()\\\" (click)=\\\"preventDe($event)\\\"/>\\n                <textarea *ngIf=\\\" node.data.style === 'textarea' \\\" autofocus [(ngModel)]=\\\"node.data.editVal\\\" (blur)=\\\"stopEdit()\\\" (keyup.enter)=\\\"stopEdit()\\\"></textarea>\\n            </span>\\n            <span *ngIf=\\\"node !== editNode\\\">{{ node.data.name }}</span>\\n        </ng-template>\\n    </tree-root>\\n\\n    <button *ngIf=\\\"storageLength!==0\\\" (click)=\\\"onEditClick()\\\">Edit Object</button>\\n</div>\\n\\n\\n<div class=\\\"menu\\\" *ngIf=\\\"contextMenu && contextMenu.node.data.canEdit===true\\\" [style.left.px]=\\\"contextMenu.x\\\" [style.top.px]=\\\"contextMenu.y\\\">\\n    <div *ngIf=\\\"notRoot()\\\">Menu for {{ contextMenu.node.data.pureName }}</div>\\n    <div *ngIf=\\\"isRoot()\\\">Menu for {{ contextMenu.node.data.name }}</div>\\n    <hr>\\n    <ul>\\n        <li (click)=\\\"outputObject(contextMenu.node)\\\"><a [style.opacity]=\\\"isRoot() && 1 || 0.3\\\">Output object</a></li>\\n        <li (click)=\\\"editValue()\\\"><a [style.opacity]=\\\"notRoot() && 1 || 0.3\\\">Edit value</a></li>\\n        <li (click)=\\\"copyValue()\\\"><a [style.opacity]=\\\"hasVal() && 1 || 0.3\\\">Copy value</a></li>\\n        <li (click)=\\\"copyObj()\\\"><a [style.opacity]=\\\"isRoot() && 1 || 0.3\\\">Copy object</a></li>\\n        <li (click)=\\\"pasteValue()\\\"><a [style.opacity]=\\\"notRoot() && canPaste() && 1 || 0.3\\\">Paste value</a></li>\\n        <li (click)=\\\"deleteValue(contextMenu.node)\\\"><a [style.opacity]=\\\"hasVal() && notRoot() && 1 || 0.3\\\">Delete value</a></li>\\n        <li (click)=\\\"deleteObject(contextMenu.node)\\\"><a [style.opacity]=\\\"isRoot() && 1 || 0.3\\\">Delete object</a></li>\\n    </ul>\\n</div>\\n<div class=\\\"menu\\\" *ngIf=\\\"contextMenu && contextMenu.node.data.canEdit===false && contextMenu.node.parent.parent===null\\\" [style.left.px]=\\\"contextMenu.x\\\" [style.top.px]=\\\"contextMenu.y\\\">\\n    <div *ngIf=\\\"notRoot()\\\">Menu for {{ contextMenu.node.data.pureName }}</div>\\n    <div *ngIf=\\\"isRoot()\\\">Menu for {{ contextMenu.node.data.name }}</div>\\n    <hr>\\n    <ul>\\n        <li (click)=\\\"outputObject(contextMenu.node)\\\"><a [style.opacity]=\\\"isRoot() && 1 || 0.3\\\">Output object</a></li>\\n        <li (click)=\\\"editValue()\\\"><a [style.opacity]=\\\"notRoot() && 1 || 0.3\\\">Edit value</a></li>\\n        <li (click)=\\\"copyValue()\\\"><a [style.opacity]=\\\"hasVal() && 1 || 0.3\\\">Copy value</a></li>\\n        <li (click)=\\\"copyObj()\\\"><a [style.opacity]=\\\"isRoot() && 1 || 0.3\\\">Copy object</a></li>\\n        <li (click)=\\\"pasteValue()\\\"><a [style.opacity]=\\\"notRoot() && canPaste() && 1 || 0.3\\\">Paste value</a></li>\\n        <li (click)=\\\"deleteValue(contextMenu.node)\\\"><a [style.opacity]=\\\"hasVal() && notRoot() && 1 || 0.3\\\">Delete value</a></li>\\n        <li (click)=\\\"deleteObject(contextMenu.node)\\\"><a [style.opacity]=\\\"isRoot() && 1 || 0.3\\\">Delete object</a></li>\\n    </ul>\\n</div>\\n<script>\\n    $(\\\"input\\\").click(function(event){\\n        event.stopPropagation();\\n    });\\n</script>\"","import { Component, OnInit, DoCheck, Output, EventEmitter, OnChanges, AfterViewInit, ViewChild } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions, TreeComponent } from 'angular-tree-component';\nimport { FormDataService } from '../form-data.service';\nimport { AngularTreeService } from './angular-tree.service';\nimport { nodeChildrenAsMap } from '@angular/router/src/utils/tree';\nimport { FormDataInterface } from '../form-data-interface';\n\nlet a;\n\n@Component({\n  selector: 'app-angular-tree',\n  templateUrl: './angular-tree.component.html',\n  styleUrls: ['./angular-tree.component.css']\n})\nexport class AngularTreeComponent implements OnInit, DoCheck {\n\n\n    constructor(private formDataService: FormDataService,\n                private ngTreeService: AngularTreeService,\n                private formDataInterface: FormDataInterface) {\n                    this.ngTreeService.getInputType().subscribe( response => {\n                        this.InputTypeMap = response;\n                    });\n                    this.ngTreeService.getJavaStorageType().subscribe( response => {\n                        this.javaStorageTypeMap = response;\n                    });\n    }\n\n\n    storageLength = 0;\n    nodes;\n    str;\n    sessionStorageTemp;\n    flagReceive;    // in form-data service, for resize the component if sessionStorage been motified\n    // formValueMap;   // <string-session-key, string-form-value>\n    formValueMap;   // <string-session-key, string-form-value>\n\n    contextMenu: { node: TreeNode, x: number, y: number } = null;\n    editNode: TreeNode = null;\n    sourceNode: TreeNode = null;\n    doCut = false;\n    InputTypeMap: any;\n    javaStorageTypeMap;\n\n    checkMap = new Map<string, boolean>();  // <sessionStorage-key, used/wait>: for @ref, if used then just put @ref & @type\n    idMap = new Map<string, string>();      // <sessionStorage-key, @id>: store id for @ref-using\n    isJsogMap = new Map<string, boolean>(); // <session-key, isJsog>: for jsogForSessionStorage, if it already been jsog or not\n    editSession;\n\n\n    /*nodes = [\n        {\n            name: 'PersonDemo1',\n            'children': [\n                {\n                    name: '@id'\n                },\n                {\n                    name: 'age',\n                },\n                {\n                    name: 'lastName',\n\n                },\n                {\n                    name: 'firstName',\n\n                },\n                {\n                    name: 'password',\n\n                },\n                {\n                    name: 'email',\n\n                },\n                {\n                    name: 'color',\n\n                },\n                {\n                    name: 'test',\n                },\n            ]\n        },\n        {\n            name: 'PersonDemo2',\n            'children': [\n                {\n                    name: '@id'\n                },\n                {\n                    name: 'age',\n                },\n                {\n                    name: 'lastName',\n\n                },\n                {\n                    name: 'firstName',\n\n                },\n                {\n                    name: 'password',\n\n                },\n                {\n                    name: 'email',\n\n                },\n                {\n                    name: 'color',\n\n                },\n                {\n                    name: 'test',\n                },\n            ]\n        }\n    ];*/\n\n    options: ITreeOptions = {\n        actionMapping: {\n            mouse: {\n                contextMenu: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n                    e.preventDefault();\n                    if (this.contextMenu && treeNode === this.contextMenu.node) {\n                        return this.closeMenu();\n                    }\n                    if ((treeNode.data.pureName !== '@type') && (treeNode.data.pureName !== '@id') ) {\n                        this.contextMenu = {\n                            node: treeNode,\n                            x: e.pageX,\n                            y: e.pageY\n                        };\n                        console.log('treeNode.data: ', treeNode.data);\n                    }\n                },\n                click: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n                    e.preventDefault();\n                    if ((treeNode.data.pureName !== '@id' && treeNode.data.pureName !== '@type') || treeNode.isRoot) {\n                        TREE_ACTIONS.TOGGLE_ACTIVE(treeModel, treeNode, e);\n                        console.log('treeNode: ', treeNode);\n                    }\n                    this.closeMenu();\n                    /*if (treeNode.isRoot) {  // root node to form\n                        // TREE_ACTIONS.TOGGLE_ACTIVE(treeModel, treeNode, e);\n                        const xhttp = new XMLHttpRequest();\n                        xhttp.onreadystatechange = function () {\n                            if (this.readyState === 4 && this.status === 200) {\n                                a = xhttp.responseText;     // universal variable for catch the response, then form the sessionStorage\n                            }\n                        };\n                        xhttp.open('POST', '/ngEditSessionStorage', true);\n                        xhttp.send(sessionStorage.getItem(treeNode.data.name));\n                    }*/\n                    if (treeNode.data.formVal !== undefined) {\n                        const temp = JSON.stringify(treeNode.data.formVal);\n                        const xhttp = new XMLHttpRequest();\n                        xhttp.onreadystatechange = function () {\n                            if (this.readyState === 4 && this.status === 200) {\n                                a = xhttp.responseText;     // universal variable for catch the response, then form the sessionStorage\n                            }\n                        };\n                        xhttp.open('POST', '/ngEditSessionStorage', true);\n                        xhttp.send(temp);\n                    }\n                },\n                drag: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n                    if (treeNode.isRoot) {\n                        this.formDataService.passNodeVal(treeNode.data.name);\n                    } else {\n                        this.formDataService.passNodeVal(treeNode.data.val);\n                    }\n                }\n                /*drop: (treeModel: TreeModel, treeNode: TreeNode, $event: any, { from, to }) => {\n                    if (from.isRoot) {\n                        console.log('from: ', from);\n                        console.log('to: ', to);\n                        if (to.parent.data.type.includes(from.data.type)) {\n                            to.parent.data.val = from.data.val;\n                            // sessionStorage.setItem(to.parent.);\n                            // array put value, object put value\n                        }\n                        // this.data.passNodeVal(from.data.name); service, do not delete\n                    } else if (from.isLeaf) {\n                        if (from.isLeaf && to.isLeaf) {\n                            // to.parent.data.val = from.data.val;\n                        }\n                        console.log('from: ', from);\n                        console.log('to: ', to);\n                        // this.data.passNodeVal(from.data.val); service, do not delete\n                    }\n                }*/\n            }\n        },\n        allowDrag: (node) => {\n            if (node.data.pureName !== '@id' && node.data.pureName !== '@type') {\n                return true;\n            }\n        },\n        allowDrop: false\n        // allowDrop: (node) => false\n    };\n\n    ngOnInit() {\n        this.formDataService.currentFlag.subscribe(flagInput => this.flagReceive = flagInput);\n        // this.data.currentFormValue.subscribe(formValueMapInput => this.formValueMap = formValueMapInput);\n        this.formDataInterface.currentFormValueMap.subscribe(formValueMapInput => this.formValueMap = formValueMapInput);\n    }\n\n    // generate ng-tree childGen( sessionStorage's inputType, jsog-in-sessionStorage )\n    childGen(InputTypeValIn: Object, sessionStorageSingleIn) {\n        const reArray = [];\n        console.log('InputTypeValIn: ', InputTypeValIn, '\\nsessionStorageSingleIn: ', sessionStorageSingleIn);\n        for (let [key, value] of sessionStorageSingleIn) {\n            console.log('key: ', key, '\\nvalue: ', value);\n                let typeTemp: any = key.match(/\\([^)]+\\)/); // catch string in () include (), used in type check\n                // console.log('typeTemp: ', typeTemp);\n                if (value === null) {\n                    value = '';\n                }\n                if (key.includes('[]') || key.includes('List') || value instanceof Array) { // array of object,  value instanceof Array\n                    // array of object\n                    const temp = {\n                        name: '',  // for view\n                        pureName: key,\n                        val: value,\n                        editVal: '',\n                        style: InputTypeValIn[key],\n                        type: typeTemp[0].toString(),\n                        canEdit: true,\n                        children: []\n                    };\n                    let viewNameTemp = '';\n                    let count = 1;\n                    const length = value.length;\n                    for ( const obElement of value) {\n                        let aaa;\n                        let bbb: string;\n                        for (const k of Object.keys(obElement)) {\n                            if ( k === '@id') {\n                                aaa = obElement['@type'].concat(obElement['@id']);\n                                bbb = aaa.split('.')[aaa.split('.').length - 1];\n                            } else if (k === '@ref') {\n                                aaa = obElement['@type'].concat(obElement['@ref']);\n                                bbb = aaa.split('.')[aaa.split('.').length - 1];\n                            }\n                        }\n                        /*temp.children.push(\n                            this.makeRootNode(\n                                bbb, JSON.parse(sessionStorage.getItem(bbb.toString())), this.InputTypeMap[obElement['@type']]\n                            )\n                        );*/\n                        /*console.log('1');\n                        console.log('this.formValueMap: ', this.formValueMap);\n                        console.log('this.InputTypeMap[obElement[@type]]: ', this.InputTypeMap[obElement['@type']]);\n                        console.log('this.formValueMap.get(bbb)', this.formValueMap.get(bbb));*/\n                        temp.children.push(\n                            this.makeRootNode(\n                                bbb, obElement, JSON.parse(this.InputTypeMap[obElement['@type']]), JSON.parse(this.formValueMap.get(bbb))\n                            )\n                        );\n                        if (count !== length) {\n                            viewNameTemp = viewNameTemp + bbb + ', ';\n                            count++;\n                        } else {\n                            viewNameTemp = viewNameTemp + bbb;\n                        }\n                    }\n                    temp.name = key + ': ' + viewNameTemp;\n                    temp.editVal = viewNameTemp;\n                    // array of value, need\n                    // array of array, need\n                    reArray.push(\n                        temp\n                    );\n                } else {    // simple value on leaf node\n                    if (value instanceof Object) {  // a object\n                        // console.log('value: ', value);\n                        const temp = {\n                            name: '',  // for view\n                            pureName: key,\n                            val: value,\n                            editVal: '',\n                            style: InputTypeValIn[key],\n                            type: 'null',\n                            canEdit: true,\n                            children: []\n                        };\n                        console.log('value: ', value);\n                        console.log('value[@type]: ', value['@type'], '\\nvalue[@id]: ', value['@id'], '\\nvalue[@ref]: ', value['@ref']);\n                        const childType = this.InputTypeMap[value['@type']];\n                        console.log('childType: ', childType);\n                        let aaa;\n                        if (value['@id'] === undefined) {\n                            aaa = value['@type'].concat(value['@ref']);\n                            console.log('ref');\n                        } else {\n                            aaa = value['@type'].concat(value['@id']);\n                            console.log('id');\n                        }\n                        const bbb = aaa.split('.')[aaa.split('.').length - 1];\n                        console.log('bbb: ', bbb);\n\n                        temp.name = key + ': ' + bbb;\n                        temp.editVal = bbb;\n                        console.log('this.formValueMap.get(bbb)): ', JSON.parse(this.formValueMap.get(bbb)));\n                        // console.log('2');\n                        temp.children.push( this.makeRootNode(bbb, value, JSON.parse(childType), JSON.parse(this.formValueMap.get(bbb))) );\n                        reArray.push(temp);\n                    } else {    // just value\n                        if (typeTemp === null) {\n                            typeTemp = 'null';\n                            reArray.push(\n                                {\n                                    name: key + ': ' + value,\n                                    pureName: key,\n                                    val: value,\n                                    editVal: value,\n                                    style: InputTypeValIn[key],\n                                    type: typeTemp,\n                                    canEdit: true\n                                }\n                            );\n                        } else {\n                            reArray.push(\n                                {\n                                    name: key + ': ' + value,\n                                    pureName: key,\n                                    val: value,\n                                    editVal: value,\n                                    style: InputTypeValIn[key],\n                                    type: typeTemp[0].toString(),\n                                    canEdit: true\n                                }\n                            );\n                        }\n                    }\n                }\n        }\n        return reArray;\n    }\n\n    // nodeName: key in sessionStorage, nodeData: object of sessionStorage, childInputType: node's child Input type\n    makeRootNode (nodeName: string, nodeData: Object, childInputType: Object, rootFormValue: string) {\n        const node = {    // root node\n            name: '',\n            pureName: '',\n            // val: nodeData,\n            val: rootFormValue,\n            editVal: '',\n            formVal: rootFormValue,\n            style: '',\n            type: '',\n            canEdit: false,\n            'children': []\n        };\n        node.name = nodeName;\n        node.pureName = nodeName;\n        node.type = nodeData['@type'].split('.')[ nodeData['@type'].split('.').length - 1 ];\n        // console.log('3');\n        node.children = this.childGen(childInputType, Object.entries(nodeData));\n\n        return node;\n    }\n\n    ngDoCheck() {     // check sessionStorage's length and generate ng-tree view\n        // if (this.storageLength !== sessionStorage.length || this.flagReceive === true) {\n        if (this.flagReceive === true) {\n            // console.log('length: ', this.temp);\n            this.nodes = [];\n            for (let i = 0; i < sessionStorage.length; i++) {\n                /*const parent = {    // root node\n                    name: '',\n                    type: '',\n                    'children': []\n                };*/\n                // parent['name'] = Object.keys(sessionStorage)[i];\n                const sessionValTemp = JSON.parse(Object.values(sessionStorage)[i]);\n                const InputTypeVal = JSON.parse( this.InputTypeMap[sessionValTemp['@type']] );\n                // parent['type'] = sessionValTemp['@type'].split('.')[sessionValTemp['@type'].split('.').length - 1];\n                // parent.children = this.childGen(InputTypeVal, Object.entries(JSON.parse(Object.values(sessionStorage)[i])));\n                console.log('Object.keys(sessionStorage)[i]): ', Object.keys(sessionStorage)[i]);\n                console.log('this.formValueMap.get(Object.keys(sessionStorage)[i]): ',\n                    this.formValueMap.get(Object.keys(sessionStorage)[i]));\n                const k = this.makeRootNode(\n                    Object.keys(sessionStorage)[i], sessionValTemp,\n                    InputTypeVal, JSON.parse(this.formValueMap.get(Object.keys(sessionStorage)[i]))\n                );\n                /*for (const [key, value] of Object.entries(JSON.parse(Object.values(sessionStorage)[i]))) {\n                    let typeTemp: any = key.match(/\\([^)]+\\)/);\n                    if (typeTemp === null) {\n                        typeTemp = 'null';\n                        parent.children.push({\n                            name: key + ': ' + value,\n                            pureName: key,\n                            val: value,\n                            style: InputTypeVal[key],\n                            type: typeTemp\n                        });\n                    } else {\n                        parent.children.push({\n                            name: key + ': ' + value,\n                            pureName: key,\n                            val: value,\n                            style: InputTypeVal[key],\n                            type: typeTemp[0].toString()\n                        });\n                    }\n                } */\n                // this.nodes.push(parent);\n                this.nodes.push(k);\n            }\n            this.flagReceive = false;   // finish resize ng-tree, turn it to false\n        }\n        this.storageLength = sessionStorage.length;\n    }\n\n    // edit whole sessionStorage, transmit information to create-component, it will transmit to generate-form-component\n    onEditClick() {\n        /*this.sessionStorageTemp = a;\n        this.data.editSessionStorage(JSON.parse(this.sessionStorageTemp.toString()));*/\n        console.log('edit Object: ', a);\n        this.formDataService.editSessionStorage(a);\n    }\n\n    closeMenu = () => {\n        this.contextMenu = null;\n    }\n\n    // copy the contextNode's editVal\n    copyValue = () => {\n        if (this.isRoot()) {    // for root node, copy its name to represent the whole object\n            console.log('this.contextMenu.node.data.name ', this.contextMenu.node.data.name);\n            document.addEventListener('copy', (e: ClipboardEvent) => {\n                e.clipboardData.setData('text/plain', (this.contextMenu.node.data.name));\n                e.preventDefault();\n                document.removeEventListener('copy', null);\n            });\n            document.execCommand('copy');\n\n            this.doCut = true;\n            this.closeMenu();\n        } else {    // not a root Node\n            this.sourceNode = this.contextMenu.node;\n\n            /*\n            const selBox = document.createElement('textarea');\n            selBox.style.position = 'fixed';\n            selBox.style.left = '0';\n            selBox.style.top = '0';\n            selBox.style.opacity = '0';\n            selBox.value = this.contextMenu.node.data.val;\n            document.body.appendChild(selBox);\n            selBox.focus();\n            selBox.select();\n            document.execCommand('copy');\n            document.body.removeChild(selBox);\n            */\n\n            // use clipboard EventListener send val to clipboard\n            document.addEventListener('copy', (e: ClipboardEvent) => {\n                e.clipboardData.setData('text/plain', (this.contextMenu.node.data.editVal));\n                e.preventDefault();\n                document.removeEventListener('copy', null);\n            });\n            document.execCommand('copy');\n\n            this.doCut = true;\n            this.closeMenu();\n        }\n    }\n\n    // copy object, then add its formValue into Map\n    copyObj = () => {\n        if (!this.isRoot) {\n            return false;\n        }\n        // this.sourceNode = this.contextMenu.node;\n        this.doCut = false;\n        const itemCopy = sessionStorage.getItem(this.contextMenu.node.data.pureName);\n        const itemCopyJsog = JSON.parse(itemCopy);\n        const timeId = new Date().getTime();\n        const temp = {};\n        for (let [k, v] of Object.entries(itemCopyJsog )) {\n            if (k === '@id') {\n                v = timeId.toString();\n            }\n            temp[k] = v;\n        }\n        const newKeyName = this.contextMenu.node.data.type + timeId;\n        sessionStorage.setItem(newKeyName, JSON.stringify(temp));  // need to set an unique seiral id\n        const itemCopyFormValue = JSON.parse(this.formValueMap.get(this.contextMenu.node.data.pureName));\n        console.log('itemCopyFormValue: ', itemCopyFormValue);\n        itemCopyFormValue['@id'] = timeId.toString();\n        // this.formValueMap.set(this.contextMenu.node.data.name + '123', itemCopyFormValue);\n        this.formDataInterface.setFormValue(newKeyName, JSON.stringify(itemCopyFormValue));\n        this.closeMenu();\n    }\n\n    isRoot = () => {\n        if (this.contextMenu.node.isRoot) {\n            return true;\n        }\n        return false;\n    }\n\n    notRoot = () => {\n        if (this.contextMenu.node.isRoot) {\n            return false;\n        }\n        return true;\n    }\n\n    // use to check show 'Delete Value', delete editValue, so check the editVal\n    hasVal = () => {\n        if (this.contextMenu.node.data.editVal === '') {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    deleteObject = (node) => {\n        sessionStorage.removeItem(node.data.name);\n        this.closeMenu();\n    }\n\n    // simple version of stopEdit()\n    deleteValue = (node) => {\n        const temp = {};\n        for (let [key, value] of Object.entries(JSON.parse(sessionStorage.getItem(node.parent.data.pureName)))) {\n            if (key === node.data.pureName) {\n                // edit for view & formVal\n                node.data.name = node.data.pureName + ': ' + '';\n                node.data.val = '';\n                node.data.editVal = '';\n                node.parent.data.formVal[node.data.pureName] = '';\n                console.log('this.editNode.parent.data.formVal: ', node.parent.data.formVal);\n                // this.formValueMap.set(node.parent.data.pureName.toString(), JSON.stringify(node.parent.data.formVal));\n                this.formDataInterface.setFormValue(node.parent.data.pureName.toString(), JSON.stringify(node.parent.data.formVal));\n                /*console.log('this.editNode.parent.data.formVal[this.editNode.data.pureName]: ',\n                this.editNode.parent.data.formVal[this.editNode.data.pureName]);*/\n                // edit for sessionStorage\n                value = '';\n            }\n            temp[key] = value;\n        }\n        // sessionStorage.setItem(node.parent.data.name, JSON.stringify(temp));\n        /*node.data.val = '';\n        node.data.editVal = '';\n        node.data.name = node.data.pureName + ': ' + node.data.val;\n\n        node.parent.data.val[node.data.pureName] = '';\n        node.parent.data.formVal[node.data.pureName] = '';*/\n\n        this.formValueMap.set(node.parent.data.pureName, JSON.stringify(node.parent.data.formVal));\n\n        let virtualRoot = node.parent;\n        while (virtualRoot.parent !== null) {\n            virtualRoot = virtualRoot.parent;\n        }\n        // console.log('this.javaStorageTypeMap: ', this.javaStorageTypeMap);\n        for (let i = 1; i <= virtualRoot.data.children.length; i++) {\n        for (const element of virtualRoot.data.children) {\n            if (element.pureName.includes(i.toString())) {\n            /*console.log('JSON.parse(this.InputTypeMap[element.formVal[@type]]): ',\n            JSON.parse(this.InputTypeMap[element.formVal['@type']]));*/\n            if (element.pureName === node.parent.data.pureName) {\n                element.formVal = node.parent.data.formVal;\n            } /*else {\n                console.log('element.formVal: ', element.formVal);\n                console.log('JSON.parse(this.javaStorageTypeMap[element.formVal[@type]]): ',\n                    JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]));\n                const typeTemp = JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]);\n                let formValueTemp = this.CheckStrToNum(element.formVal);\n                console.log('ValueTemp: ', formValueTemp);\n                formValueTemp = this.jsogGen(formValueTemp, typeTemp);\n                console.log('ValueTemp: ', formValueTemp);\n                sessionStorage.setItem(element.pureName, JSON.stringify(formValueTemp));\n            }*/\n            console.log('element.pureName: ', element.pureName);\n            const typeTemp = JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]);\n            let formValueTemp = this.CheckStrToNum(element.formVal);\n            formValueTemp = this.jsogGen(formValueTemp, typeTemp);\n            sessionStorage.setItem(element.pureName, JSON.stringify(formValueTemp));\n        }\n        }\n    }\n\n        // make tree to reload\n        this.flagReceive = true;\n        this.closeMenu();\n    }\n\n    // replace the value in sessionStorage directly, edit the name attr of ng-tree directly\n    pasteValue = () => {\n        if (!this.canPaste()) {\n            alert('no value to paste!');\n            this.closeMenu();\n        }\n        if (this.doCut) {\n            const [name, pureName, val] = Object.entries(this.contextMenu.node.parent.data.children[1]);    // index 1: get @type val\n            const [sourceName, sourcePureName, sourceVal] = Object.entries(this.sourceNode.parent.data.children[1]);\n            if (val[1].toString() === sourceVal[1].toString()) {\n                if (this.contextMenu.node.data.pureName === this.sourceNode.data.pureName) {\n                    this.contextMenu.node.data.val = this.sourceNode.data.val;  // node's val\n                    // node's view\n                    this.contextMenu.node.data.name = this.contextMenu.node.data.pureName + ': ' + this.contextMenu.node.data.val;\n                    const temp = {};\n                    // console.log('sessionStorage.getItem(this.contextMenu.node.parent.data.name: ',\n                    // sessionStorage.getItem(this.contextMenu.node.parent.data.name));\n                    for ( let [key, value] of Object.entries(\n                        JSON.parse(sessionStorage.getItem(this.contextMenu.node.parent.data.name)))) {\n                        if (key === this.contextMenu.node.data.pureName) {\n                            value = this.sourceNode.data.val;\n                        }\n                        temp[key] = value;\n                    }\n                    sessionStorage.setItem(this.contextMenu.node.parent.data.name, JSON.stringify(temp));\n                    this.doCut = false;\n                    this.sourceNode = null;\n                } else {\n                    alert('not the same attribute');\n                }\n            } else {\n                alert('not the same type object');\n            }\n        }\n        this.closeMenu();\n    }\n\n    canPaste = () => {\n        if (!this.sourceNode) {\n            return false;\n        }\n        return this.sourceNode.treeModel.canMoveNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 });\n    }\n\n    editValue() {\n        this.editNode = this.contextMenu.node;\n        this.closeMenu();\n    }\n    stopEdit() {\n        // console.log('this.editNode.data.style: ', this.editNode.data.style);\n        const temp = {};\n        for (let [key, value] of Object.entries(\n            JSON.parse(sessionStorage.getItem(this.editNode.parent.data.pureName)))) {\n            if (key === this.editNode.data.pureName) {\n                // edit for view & formVal\n                this.editNode.data.name = this.editNode.data.pureName + ': ' + this.editNode.data.editVal;\n                this.editNode.data.val = this.editNode.data.editVal;\n                this.editNode.parent.data.formVal[this.editNode.data.pureName] = this.editNode.data.editVal;\n                console.log('this.editNode.parent.data.formVal: ', this.editNode.parent.data.formVal);\n                // this.formValueMap.set(this.editNode.parent.data.pureName.toString(), JSON.stringify(this.editNode.parent.data.formVal));\n                this.formDataInterface.setFormValue(this.editNode.parent.data.pureName,\n                                                    JSON.stringify(this.editNode.parent.data.formVal));\n                /*console.log('this.editNode.parent.data.formVal[this.editNode.data.pureName]: ',\n                    this.editNode.parent.data.formVal[this.editNode.data.pureName]);*/\n                // edit for sessionStorage\n                value = this.editNode.data.editVal;\n            }\n            temp[key] = value;\n        }\n        sessionStorage.setItem(this.editNode.parent.data.pureName, JSON.stringify(temp));\n        // sessionStorage.setItem(this.editNode.parent.data.name, JSON.stringify(temp));\n        // console.log('this.editNode.data.editVal: ', this.editNode.data.editVal);\n        // console.log(this.jsogGen(this.editNode.parent.data.formVal, JSON.parse(this.javaStorageTypeMap[temp['@type']])));\n        /*sessionStorage.setItem(\n            this.editNode.parent.data.pureName,\n            JSON.stringify(this.jsogGen(this.editNode.parent.data.formVal, JSON.parse(this.javaStorageTypeMap[temp['@type']])))\n        );*/\n\n        let virtualRoot = this.editNode.parent;\n        while (virtualRoot.parent !== null) {\n            virtualRoot = virtualRoot.parent;\n        }\n        // reload in order, to make sure all elements been update.\n        /*for (let i = 1; i <= virtualRoot.data.children.length; i++) {\n            for (const element of virtualRoot.data.children) {\n                if (element.pureName.includes(i.toString())) {\n                    /*console.log('JSON.parse(this.InputTypeMap[element.formVal[@type]]): ',\n                    JSON.parse(this.InputTypeMap[element.formVal['@type']]));///\n                    if (element.pureName === this.editNode.parent.data.pureName) {\n                        element.formVal = this.editNode.parent.data.formVal;\n                    } /*else {\n                        console.log('element.formVal: ', element.formVal);\n                        console.log('JSON.parse(this.javaStorageTypeMap[element.formVal[@type]]): ',\n                            JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]));\n                        const typeTemp = JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]);\n                        let formValueTemp = this.CheckStrToNum(element.formVal);\n                        console.log('ValueTemp: ', formValueTemp);\n                        formValueTemp = this.jsogGen(formValueTemp, typeTemp);\n                        console.log('ValueTemp: ', formValueTemp);\n                        sessionStorage.setItem(element.pureName, JSON.stringify(formValueTemp));\n                    }///\n                    this.checkMap.clear();\n                    const typeTemp = JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]);\n                    let formValueTemp = this.CheckStrToNum(element.formVal);\n                    formValueTemp = this.jsogGen(formValueTemp, typeTemp);\n                    sessionStorage.setItem(element.pureName, JSON.stringify(formValueTemp));\n                }\n            }\n        }*/\n\n        for (const element of virtualRoot.data.children) {\n            if (element.pureName === this.editNode.parent.data.pureName) {\n                element.formVal = this.editNode.parent.data.formVal;\n            }\n            this.checkMap.clear();\n            const typeTemp = JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]);\n            let formValueTemp = this.CheckStrToNum(element.formVal);\n            formValueTemp = this.jsogGen(formValueTemp, typeTemp);\n            console.log('formValueTemp: ', formValueTemp);\n            sessionStorage.setItem(element.pureName, JSON.stringify(formValueTemp));\n        }\n\n        // make tree to reload\n        this.flagReceive = true;\n        this.editNode = null;\n\n        /*\n         * change log:\n         * parse into jsog when store.\n         * every ob contain other ob, need to check whether it had been used or not, then clear the map.\n        */\n        this.checkMap.clear();\n    }\n\n    preventDe($event) {\n        $event.stopPropagation();\n    }\n\n    CheckStrToNum(input) {  // input = this.form_receive.value (Object)\n        const className = input['@type'];\n        const javaType = JSON.parse(this.javaStorageTypeMap[className]);\n        for (const key in javaType) { // change string default value to number\n            if (javaType[key] === 'byte' || javaType[key] === 'short' || javaType[key] === 'int' ||\n                javaType[key] === 'long' || javaType[key] === 'float' || javaType[key] === 'double' ||\n                javaType[key] === 'Byte' || javaType[key] === 'Short' || javaType[key] === 'Integer' ||\n                javaType[key] === 'Long' || javaType[key] === 'Float' || javaType[key] === 'Double') {\n                input[key] = +input[key];   // string to number\n            }\n        }\n        return input;\n    }\n\n    jsogForSessionStorage(jsonInput: Object, typeCheck: Object) { // jsonInput(object): k-v pair of form, typeCheck: ob of outer ob's type\n        // jsonInput-> { name: yang } typeCheck-> { age: long }\n        // jsonInput-> { children:[p1, p2] } typeCheck-> { children: list PersonDemo }\n        // console.log('jsonInput: ', jsonInput);\n        const tempKey = Object.keys(jsonInput); //  age, children\n        const tempVal = Object.values(jsonInput);  // 1, [p1, p2], [1, 2], [\"1\", \"2\"]\n        const tempType = typeCheck[tempKey.toString()]; // long, list PersonDemo, list int, list string\n\n        if (tempVal.toString() === '') {   // no value, put null\n            return null;\n        }\n        if (tempType === 'byte' || tempType === 'short' || tempType === 'int' || tempType === 'long' // number, output directly\n            || tempType === 'float' || tempType === 'double' || tempType === 'Byte' || tempType === 'Short'\n            || tempType === 'Integer' || tempType === 'Long' || tempType === 'Float' || tempType === 'Double') {\n            return +tempVal;\n        } else if (tempType === 'boolean' || tempType === 'Boolean') {    // true & false\n            if (tempVal.toString() === 'true') {\n                return true;\n            } else {\n                return false;\n            }\n        } else {    // list or string\n            const tempTypeArray = tempType.split(' ');  // split the type-value to array\n            if (tempTypeArray[0] === 'List' || tempTypeArray[0].includes('[]')) { // list or array variable in java, use json list store\n                const tempListVal = [];\n                const tempSingleVal = tempVal.toString().split(', ');   // value split with ', '\n                if ((tempSingleVal.length === 1) && (tempSingleVal[0] === '')) {\n                    return tempListVal; // list have nothing, return empty list\n                }\n                for (let i = 0; i < tempSingleVal.length; i++) {\n                    if (sessionStorage.getItem(tempSingleVal[i]) !== null) {   // sessionStorage has it. [p1, p2] list persondemo\n                        if (this.checkMap.has(tempSingleVal[i])) { // used, add as @ref\n                            const temp = {};\n                            const refType = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@type'];\n                            // temp['@ref'] = this.idMap.get(tempSingleVal[i]);\n                            temp['@ref'] = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@id'];\n                            temp['@type'] = refType;\n                            tempListVal[i] = temp;\n                            // console.log('tempListVal[i]: ', tempListVal[i]);\n                        } else {    // haven't used it yet, set checkMap to true, and write it\n                            this.checkMap.set(tempSingleVal[i], true);\n                            // const typein = this.storageTypeMap.get(tempSingleVal[i]);\n                            // const typein = JSON.parse(this.javaStorageTypeMap[tempSingleVal[i]]);\n                            /* sessionStorage already been jsog, use it directly\n                                tempListVal[i] = JSON.parse(sessionStorage.getItem(tempSingleVal[i]));\n                            */\n                            // tempListVal[i] = this.jsogGen(JSON.parse(sessionStorage.getItem(tempSingleVal[i])), typein);\n                            // console.log('checkMap', this.checkMap);\n                            const typeInJsog = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@type'];\n                            const typein = JSON.parse(this.javaStorageTypeMap[typeInJsog]);\n                            tempListVal[i] = this.jsogGen(JSON.parse(this.formValueMap.get(tempSingleVal[i])), typein);\n                            console.log('tempListVal[i]: ', tempListVal[i]);\n                        }\n                    } else if (tempTypeArray[1] === 'byte' || tempTypeArray[1] === 'short' || tempTypeArray[1] === 'int'\n                        || tempTypeArray[1] === 'long' || tempTypeArray[1] === 'float' || tempTypeArray[1] === 'double'\n                        || tempTypeArray[1] === 'Byte' || tempTypeArray[1] === 'Short' || tempTypeArray[1] === 'Integer'\n                        || tempTypeArray[1] === 'Long' || tempTypeArray[1] === 'Float' || tempTypeArray[1] === 'Double') {\n                        // [1, 2] list int, change it to number\n                        tempListVal[i] = +tempSingleVal[i];\n                    } else if (tempTypeArray[1] === 'Boolean' || tempTypeArray[1] === 'boolean') {    // [t, f, t, f] list boolean\n                        console.log('tempSingleVal.toString: ', tempSingleVal[i].toString());\n                        if (tempSingleVal[i].toString() === 'true') {\n                            tempListVal[i] = true;\n                        } else {\n                            tempListVal[i] = false;\n                        }\n                    } else {    // [\"1\", \"2\"] list string\n                        tempListVal[i] = tempSingleVal[i];\n                        // console.log('tempListVal: ', tempListVal);\n                    }\n                }\n                console.log('tempListVal: ', tempListVal);\n                return tempListVal;\n            } else {    // string represent object\n                const StrTempVal = tempVal.toString();\n                if (sessionStorage.getItem(StrTempVal) !== null) {   // sessionStorage has it.\n                    let reVal: any;\n                    if (this.checkMap.has(StrTempVal)) { // used, add as @ref\n                        const temp = {};\n                        const refType = JSON.parse(sessionStorage.getItem(StrTempVal))['@type'];\n                        temp['@ref'] = JSON.parse(sessionStorage.getItem(StrTempVal))['@id'];\n                        temp['@type'] = refType;\n                        reVal = temp;\n                    } else {    // haven't used it yet, set checkMap to true, and write it\n                        this.checkMap.set(StrTempVal, true);\n                        // const typein = this.storageTypeMap.get(StrTempVal);\n                        // this.storageTypeMap.get(StrTempVal);\n                        const typein = JSON.parse(this.javaStorageTypeMap[JSON.parse(sessionStorage.getItem(StrTempVal))['@type']]);\n                        // reVal = this.jsogGen(JSON.parse(sessionStorage.getItem(StrTempVal)), typein);\n                        reVal = this.jsogGen(JSON.parse(this.formValueMap.get(StrTempVal)), typein);\n                        // console.log('checkMap', this.checkMap);\n                    }\n                    // console.log('reVal: ', reVal);\n                    return reVal;\n                } else {\n                    return StrTempVal;\n                }\n            }\n        }\n    }\n\n    // formInput = this.form_receive.value (object); typein: object of outer type from storageTypeMap\n    jsogGen(formInput: Object, typein: Object) {\n        const jsogS = {};\n\n        const aaa = formInput['@type'].concat(formInput['@id']);\n        const bbb = aaa.split('.')[aaa.split('.').length - 1];\n        this.checkMap.set(bbb, true);\n        for (let i = 0; i < Object.keys(formInput).length; i++) {\n            const tempKey = Object.keys(formInput)[i];\n            if ((tempKey !== '@id') && (tempKey !== '@type')) {\n                const single_KV_pair = {};\n                single_KV_pair[tempKey] = formInput[tempKey];\n                formInput[tempKey] = this.jsogForSessionStorage(single_KV_pair, typein);\n            }\n            jsogS[tempKey] = formInput[tempKey];\n        }\n        return jsogS;\n    }\n\n    outputObject(node) {\n        if (node.isRoot) {\n            // output form value to server ngFormOutput\n            this.ngTreeService.ouputObject(sessionStorage.getItem(node.data.pureName)).subscribe(response => {\n                console.log('output', response);\n            });\n        }\n        this.closeMenu();\n    }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/*@Injectable({\n    providedIn: 'root'\n})*/\n@Injectable()\nexport class AngularTreeService {\n\n    typeUrl = '/ngInputType';\n    javaStorageTypeUrl = '/ngJavaStorageType';\n    outputUrl = '/ngFormOutput';\n\n    httpHeaders = new HttpHeaders({ 'Content-Type': 'text/plain' });\n\n    constructor( private http: HttpClient ) { }\n\n    getInputType() {\n        return this.http.get(this.typeUrl);\n    }\n\n    getJavaStorageType() {\n        return this.http.get(this.javaStorageTypeUrl);\n    }\n\n    ouputObject(output) {\n        return this.http.post(this.outputUrl, output, { headers: this.httpHeaders, observe: 'response' });\n    }\n\n}\n","import { NgModule, Input } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateComponent } from './create/create.component';\nimport { EditComponent } from './edit/edit.component';\nimport { UploaderComponent } from './uploader/uploader.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { ContextmenuComponent } from './contextmenu/contextmenu.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/', pathMatch: 'full' },\n    { path: 'create', component: CreateComponent },\n    {\n        path: 'edit',\n        component: EditComponent,\n        /*children: [\n            { path: 'uploader', component: UploaderComponent }\n        ]*/\n    },\n    { path: 'uploader', component: UploaderComponent },\n    { path: 'contextmenu', component: ContextmenuComponent }\n];\n\n@NgModule({\n    imports: [ RouterModule.forRoot(routes) ],\n    exports: [ RouterModule ],\n    providers: [ {provide: LocationStrategy, useClass: HashLocationStrategy} ]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"/*\\nh1 {\\n  font-size: 1.2em;\\n  color: #999;\\n  margin-bottom: 0;\\n}\\n\\nh2 {\\n  font-size: 2em;\\n  margin-top: 0;\\n  padding-top: 0;\\n}\\n\\nnav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\n\\nnav a:visited,\\na:link {\\n  color: #607d8b;\\n}\\n\\nnav a:hover {\\n  color: #039be5;\\n  background-color: #cfd8dc;\\n}\\n\\nnav a.active {\\n  color: #039be5;\\n}\\n\\n.main {\\n  margin-left: 8em;\\n  margin-top: 3em;\\n  /* Same as the width of the sidenav //\\n}\\n\\n.sidenav div:hover {\\n  color: #f1f1f1;\\n}\\n\\n.sidenav div {\\n  padding: 6px 6px 6px 32px;\\n  text-decoration: none;\\n  font-size: 16px;\\n  color: #818181;\\n  display: block;\\n}\\n\\n.sidenav {\\n  height: 100%;\\n  width: 6em;\\n  position: fixed;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  background-color: #111;\\n  overflow-x: hidden;\\n  padding-top: 20px;\\n}\\n*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBaUVDIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuaDEge1xuICBmb250LXNpemU6IDEuMmVtO1xuICBjb2xvcjogIzk5OTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuaDIge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZy10b3A6IDA7XG59XG5cbm5hdiBhIHtcbiAgcGFkZGluZzogNXB4IDEwcHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbm5hdiBhOnZpc2l0ZWQsXG5hOmxpbmsge1xuICBjb2xvcjogIzYwN2Q4Yjtcbn1cblxubmF2IGE6aG92ZXIge1xuICBjb2xvcjogIzAzOWJlNTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NmZDhkYztcbn1cblxubmF2IGEuYWN0aXZlIHtcbiAgY29sb3I6ICMwMzliZTU7XG59XG5cbi5tYWluIHtcbiAgbWFyZ2luLWxlZnQ6IDhlbTtcbiAgbWFyZ2luLXRvcDogM2VtO1xuICAvKiBTYW1lIGFzIHRoZSB3aWR0aCBvZiB0aGUgc2lkZW5hdiAvL1xufVxuXG4uc2lkZW5hdiBkaXY6aG92ZXIge1xuICBjb2xvcjogI2YxZjFmMTtcbn1cblxuLnNpZGVuYXYgZGl2IHtcbiAgcGFkZGluZzogNnB4IDZweCA2cHggMzJweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjODE4MTgxO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnNpZGVuYXYge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiA2ZW07XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuKi8iXX0= */\"","module.exports = \"<head>\\n    <title>Frontend</title>\\n\\t<script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\n</head>\\n\\n<div class=\\\"container-fluid\\\"> <!-- use ngx-bootstrap -->\\n    <br>\\n    <br>\\n    <div class=\\\"row\\\">\\n        <br>\\n        <div class=\\\"col-sm-2 col-md-2 col-lg-1 col-xl-1\\\">\\n            <nav class=\\\"navbar navbar-dark bg-light navbar-expand-sm px-0 flex-row flex-nowrap\\\">\\n                <div class=\\\"navbar-collapse collapse\\\">\\n                    <div class=\\\"nav flex-sm-column flex-row\\\">\\n                        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/uploader\\\">Upload</a>\\n                        <br>\\n                        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/create\\\">Create</a>\\n                        <br>\\n                        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\" (click)=\\\"gotoindex()\\\">Home</a>\\n                    </div>\\n                </div>\\n            </nav>\\n        </div>\\n        <div>\\n            <br>\\n            <br>\\n            <h1> Welcome!!</h1>\\n            <br>\\n            <br>\\n            <router-outlet></router-outlet>\\n            <br>\\n            <app-angular-tree></app-angular-tree>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnChanges} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules, ConditionalExpr } from '@angular/compiler';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { AppService } from './app.service';\n\ndeclare var jquery: any; // 這邊用 var\n// declare let $: any; // 當然 let 也可以\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [ AppService ]\n})\n\nexport class AppComponent implements OnChanges {\n\n    title = 'ng-test';\n    pathValue = '';\n    dataClass: any;\n    welcomeMessage = true;\n    dataClassShow = false;\n\n    clickedEvent: Event;\n\n    constructor(\n        private router: Router,\n        private appService: AppService\n    ) {\n        sessionStorage.clear();\n    }\n\n    gotoindex() {\n        this.welcomeMessage = true;\n        sessionStorage.clear();\n        this.router.navigate(['/']);\n    }\n\n    ngOnChanges() {\n    }\n\n    childEventClicked(event: Event) {\n        this.clickedEvent = event;\n        console.log('app print: ', this.clickedEvent);\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { EditComponent } from './edit/edit.component';\nimport { CreateComponent } from './create/create.component';\nimport { UploaderComponent } from './uploader/uploader.component';\nimport { GenerateFormComponent } from './generate-form/generate-form.component';\nimport { JstreeComponent } from './jstree/jstree.component';\nimport { TreeModule } from 'angular-tree-component';\nimport { AngularTreeComponent } from './angular-tree/angular-tree.component';\nimport { FormDataService } from './form-data.service';\nimport { ContextmenuComponent } from './contextmenu/contextmenu.component';\nimport { NgDragDropModule } from 'ng-drag-drop';\nimport { AngularTreeService } from './angular-tree/angular-tree.service';\nimport { FormDataInterface } from './form-data-interface';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        EditComponent,\n        CreateComponent,\n        UploaderComponent,\n        GenerateFormComponent,\n        JstreeComponent,\n        AngularTreeComponent,\n        ContextmenuComponent,\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TreeModule.forRoot(),\n        NgDragDropModule.forRoot(),\n        AppRoutingModule,\n    ],\n    providers: [\n        FormDataService,\n        AngularTreeService,\n        { provide: FormDataInterface, useExisting: FormDataService}\n    ],\n    bootstrap: [ AppComponent ],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\n/*@Injectable({\n  providedIn: 'root'\n})*/\n\n\n@Injectable()\nexport class AppService {\n\n    constructor(private http: HttpClient) { }\n\n}\n","module.exports = \".menu {\\n  position: absolute;\\n  background: rgba(255, 255, 255, 0.9);\\n  padding: 7px;\\n  border-radius: 5px;\\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.2);\\n}\\n\\nul {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\nli {\\n  padding: 7px;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\nli:hover {\\n  background-color: aliceblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGV4dG1lbnUvY29udGV4dG1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixvQ0FBb0M7RUFDcEMsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQiwwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFNBQVM7QUFDWDs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2NvbnRleHRtZW51L2NvbnRleHRtZW51LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVudSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICBwYWRkaW5nOiA3cHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNoYWRvdzogMCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxubGkge1xuICBwYWRkaW5nOiA3cHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5saTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcbn0iXX0= */\"","module.exports = \"<tree-root [focused]=\\\"true\\\" [options]=\\\"options\\\" [nodes]=\\\"nodes\\\">\\n  <ng-template #treeNodeTemplate let-node=\\\"node\\\">\\n    <span *ngIf=\\\"node === editNode\\\">\\n      <input autofocus [(ngModel)]=\\\"node.data.name\\\" (blur)=\\\"stopEdit()\\\" (keyup.enter)=\\\"stopEdit()\\\" />\\n    </span>\\n    <span *ngIf=\\\"node !== editNode\\\">{{ node.data.name }}</span>\\n  </ng-template>\\n</tree-root>\\n<div class=\\\"menu\\\" *ngIf=\\\"contextMenu\\\" [style.left.px]=\\\"contextMenu.x\\\" [style.top.px]=\\\"contextMenu.y\\\">\\n  <div>Menu for {{ contextMenu.node.data.name }}</div>\\n  <hr>\\n  <ul>\\n    <li (click)=\\\"edit()\\\"><a>Edit</a></li>\\n    <li (click)=\\\"copy()\\\"><a>Copy</a></li>\\n    <li (click)=\\\"cut()\\\"><a>Cut</a></li>\\n    <li (click)=\\\"paste()\\\"><a [style.opacity]=\\\"canPaste() && 1 || 0.3\\\">Paste</a></li>\\n  </ul>\\n</div>\\n<br>\\n<p>Keys:</p>\\ndown | up | left | right | space | enter\"","import { Component, HostListener } from '@angular/core';\nimport { ITreeOptions, TREE_ACTIONS, TreeNode, TreeModel } from 'angular-tree-component';\n\n@Component({\n  selector: 'app-contextmenu',\n  templateUrl: './contextmenu.component.html',\n  styleUrls: [ './contextmenu.component.css' ]\n})\nexport class ContextmenuComponent {\n  contextMenu: {node: TreeNode, x: number, y: number} = null;\n  sourceNode: TreeNode = null;\n  editNode: TreeNode = null;\n  doCut = false;\n  nodes = [\n    {\n      name: 'root1',\n      children: [\n        { name: 'child1' },\n        { name: 'child2' }\n      ]\n    },\n    {\n      name: 'root2',\n      children: [\n        { name: 'child2.1', children: [] },\n        { name: 'child2.2', children: [\n          {name: 'grandchild2.2.1'}\n        ] }\n      ]\n    },\n    { name: 'root3' },\n    { name: 'root4', children: [] },\n    { name: 'root5', children: null }\n  ];\n\n  options: ITreeOptions = {\n    actionMapping: {\n      mouse: {\n        contextMenu: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n          e.preventDefault();\n          if (this.contextMenu && treeNode === this.contextMenu.node) {\n            return this.closeMenu();\n          }\n          this.contextMenu = {\n            node: treeNode,\n            x: e.pageX,\n            y: e.pageY\n          };\n        },\n        click: (treeModel: TreeModel, treeNode: TreeNode, e: MouseEvent) => {\n          this.closeMenu();\n          TREE_ACTIONS.TOGGLE_ACTIVE(treeModel, treeNode, e);\n        }\n      }\n    }\n  };\n\n  closeMenu = () => {\n    this.contextMenu = null;\n  }\n\n  edit = () => {\n    this.editNode = this.contextMenu.node;\n    this.closeMenu();\n  }\n\n  stopEdit = () => {\n      console.log('this.editNode: ', this.editNode.data.name);\n    this.editNode = null;\n  }\n\n  copy = () => {\n    this.sourceNode = this.contextMenu.node;\n    this.doCut = false;\n    this.closeMenu();\n  }\n\n  cut = () => {\n    this.sourceNode = this.contextMenu.node;\n    this.doCut = true;\n    this.closeMenu();\n  }\n\n  paste = () => {\n    if (!this.canPaste()) {\n      return;\n    }\n    this.doCut\n      ? this.sourceNode.treeModel.moveNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 })\n      : this.sourceNode.treeModel.copyNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 });\n\n    this.sourceNode = null;\n    this.closeMenu();\n  }\n\n  canPaste = () => {\n    if (!this.sourceNode) {\n      return false;\n    }\n    return this.sourceNode.treeModel.canMoveNode(this.sourceNode, { parent: this.contextMenu.node, index: 0 });\n  }\n}\n\nfunction uuid() {\n  return Math.floor(Math.random() * 10000000000000);\n}\n","module.exports = \"/*\\n.sidenav div:hover {\\n  color: #f1f1f1;\\n}\\n\\n.sidenav div {\\n  padding: 6px 6px 6px 32px;\\n  text-decoration: none;\\n  font-size: 25px;\\n  color: #818181;\\n  display: block;\\n}\\n\\n.sidenav {\\n  height: 100%;\\n  width: 200px;\\n  position: fixed;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  background-color: #111;\\n  overflow-x: hidden;\\n  padding-top: 20px;\\n}\\n*/\\nbutton {\\n  margin-left: 5px\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0F3QkM7QUFDRDtFQUNFO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuLnNpZGVuYXYgZGl2OmhvdmVyIHtcbiAgY29sb3I6ICNmMWYxZjE7XG59XG5cbi5zaWRlbmF2IGRpdiB7XG4gIHBhZGRpbmc6IDZweCA2cHggNnB4IDMycHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBjb2xvcjogIzgxODE4MTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5zaWRlbmF2IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMjAwcHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuKi9cbmJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiA1cHhcbn1cbiJdfQ== */\"","module.exports = \"<button *ngFor=\\\"let item of dataClassName\\\" (click)=\\\"postClass(item)\\\" class=\\\"btn btn-primary\\\">{{ item }}</button>\\n<br>\\n\\n<app-generate-form [generate_form_receive]=\\\"receive\\\"></app-generate-form>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { CreateService } from './create.service';\nimport { FormArray, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { FormDataService } from '../form-data.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  providers: [ CreateService ],\n  styleUrls: ['./create.component.css']\n})\n\nexport class CreateComponent implements OnInit {\n\n    constructor(private createService: CreateService,\n                private data: FormDataService) {\n                    this.createService.getClassName().subscribe(response => {\n                        this.dataClassName = Object.values(response);\n            });\n    }\n\n    dataClassName: any;\n    receive: any;\n\n    ngOnInit() {\n        this.data.currentStorage.subscribe(storageIn => this.receive = storageIn);\n    }\n\n    /* if user choose the different class, re-get from the server, and pass to the generate-form component\n     * item: the object which user clicked, { name: classname }\n     */\n    postClass(item: any) {\n        const obItem = {'name': item};\n        console.log(obItem);\n        this.createService.postClass(obItem).subscribe(response => {\n            console.log('response: ', response);\n            this.receive = response.body;   // [] consist of three object from server： {defaultValue}, {styleNode}, {typeNode}\n            console.log('receive.body: ', this.receive);\n        });\n    }\n}\n","import { Injectable, OnInit, OnChanges } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n/*@Injectable({\n  providedIn: 'root'\n})*/\n\n@Injectable()\nexport class CreateService implements OnInit {\n\n    createUrl = '/ngClassNames';\n    sendUrl = '/ngNameCreateForm';\n\n    constructor( private http: HttpClient ) { }\n\n    getClassName() {\n        return this.http.get(this.createUrl);\n    }\n\n    postClass(input) {\n        const httpHeaders = new HttpHeaders({ 'Content-Type' : 'text/plain' });\n        return this.http.post(this.sendUrl, input, {headers: httpHeaders, observe: 'response'});\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"/* ProfileEditorComponent's private CSS styles */\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  padding-top: 24px;\\n}\\nlabel {\\n  display: block;\\n  width: 6em;\\n  margin: .5em 0;\\n  color: #607D8B;\\n  font-weight: bold;\\n}\\ninput {\\n  height: 2em;\\n  font-size: 1em;\\n  padding-left: .4em;\\n}\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #ccc;\\n  cursor: auto;\\n}\\n/*\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0RBQWdEO0FBQ2hEO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLGNBQWM7RUFDZCxVQUFVO0VBQ1YsY0FBYztFQUNkLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7QUFHQTs7OztDQUlDIiwiZmlsZSI6InNyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBQcm9maWxlRWRpdG9yQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNmVtO1xuICBtYXJnaW46IC41ZW0gMDtcbiAgY29sb3I6ICM2MDdEOEI7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5pbnB1dCB7XG4gIGhlaWdodDogMmVtO1xuICBmb250LXNpemU6IDFlbTtcbiAgcGFkZGluZy1sZWZ0OiAuNGVtO1xufVxuXG5idXR0b24ge1xuICBmb250LWZhbWlseTogQXJpYWw7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogNXB4IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZkOGRjO1xufVxuXG5idXR0b246ZGlzYWJsZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBjb2xvcjogI2NjYztcbiAgY3Vyc29yOiBhdXRvO1xufVxuXG5cbi8qXG5Db3B5cmlnaHQgMjAxNy0yMDE4IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG5Vc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0XG5jYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwOi8vYW5ndWxhci5pby9saWNlbnNlXG4qLyJdfQ== */\"","module.exports = \"<h3>Get from JSON file</h3>\\n<div>\\n  <button (click)=\\\"clear(); showConfigResponse()\\\">getResponse</button>\\n  <button (click)=\\\"clear()\\\">clear</button>\\n  <button (click)=\\\"clear(); getData()\\\">Data</button>\\n  <span *ngIf = \\\"edit\\\">\\n    <div *ngIf = \\\"headers\\\">\\n      Response headers:\\n      <ul>\\n        <li *ngFor = \\\"let header of headers\\\">{{ header }}</li>\\n      </ul>\\n    </div>\\n  </span>\\n</div>\\n\\n<nav>\\n    <a routerLink=\\\"/uploader\\\">uploader</a>\\n</nav>\\n\\n<!-- <router-outlet></router-outlet> -->\\n\\n<form [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <ng-container *ngFor=\\\"let key of dataKeys\\\">\\n        <label *ngIf=\\\"key!=='@id' && key!=='@type'\\\">\\n            {{ key }} : \\n            <input type=\\\"text\\\" formControlName=\\\"{{ key }}\\\">\\n        </label>\\n    </ng-container>\\n\\n    <button type=\\\"submit\\\">Submit and Store</button>\\n</form>\\n\\n<p>\\n    Form Value: {{ dataForm.value | json }}\\n</p>\\n\\n\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"data.age\\\">\\n<input type=\\\"text\\\" value=\\\"{{data.firstName}}\\\">\\n<input type=\\\"text\\\" value=\\\"{{data.lastName}}\\\">-->\"","import { Component, OnInit } from '@angular/core';\nimport { Edit, EditService } from './edit.service';\nimport { FormArray, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  providers: [ EditService ],\n  styleUrls: ['./edit.component.css']\n})\n\nexport class EditComponent implements OnInit {\n\n    headers: string[];\n    edit: Edit;\n    data: any;\n    dataKeys: any;\n    dataTypes: any;\n    dataForm = this.fb.group({});\n    FormView;\n\n    constructor(\n        private editService: EditService,\n        private fb: FormBuilder) { }\n\n    clear() {\n        this.edit = undefined;\n        this.headers = undefined;\n        this.dataKeys = undefined;\n        this.dataForm.reset();\n    }\n\n    ngOnInit() {}\n\n    showConfigResponse() {\n        this.editService.getEditResponse()\n            // resp is of type `HttpResponse<Edit>`\n            .subscribe(resp => {\n                // display its headers\n                const keys = resp.headers.keys();\n                this.headers = keys.map(key =>\n                    `${key}: ${resp.headers.get(key)}`);\n\n                // access the body directly, which is typed as `Config`.\n                this.edit = { ...resp.body };\n            });\n    }\n\n    getData() {\n        this.editService.getEditData()\n        .subscribe(response => {\n            this.dataTypes = response[0];\n            this.dataKeys = Object.keys(response[1]);\n            this.data = response[1];\n\n            console.log(response[0]);\n            console.log(response[1]);\n\n            this.FormView = response[0];\n            this.dataForm = this.fb.group(response[1]);\n        });\n\n    }\n\n    // write submit event here\n    onSubmit() {\n        console.log(this.dataForm.value);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface Edit {\n    age: string;\n    firstName: string;\n}\n\n/*@Injectable({\n  providedIn: 'root'\n})*/\n\n// get data from server\n@Injectable()\nexport class EditService {\n\n    editUrl = '/ngEdit';\n\n    constructor( private http: HttpClient ) {}\n\n    getEditResponse(): Observable<HttpResponse<Edit>> {\n        return this.http.get<Edit>(\n            this.editUrl, { observe: 'response' });\n    }\n\n    getEditData() {\n        return this.http.get(this.editUrl);\n    }\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class FormDataInterface {\n\n\n    abstract currentFormValueMap: Observable< Map<string, string> >;\n\n    abstract setFormValue(key: string, value: string): void;\n\n    abstract getFormValue(): Map<string, string>;   // it's worked\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { FormDataInterface } from './form-data-interface';\n\n/*@Injectable({\n  providedIn: 'root'\n})*/\n\n@Injectable()\nexport class FormDataService implements FormDataInterface {\n\n    // ng-tree edit sessionStorage -> create\n    private storageSource = new BehaviorSubject<Object>([]);\n    currentStorage = this.storageSource.asObservable();\n\n    // tree drag, form drop, pass the value\n    private dragdropNode = new BehaviorSubject<Object>([]);\n    currentNode = this.dragdropNode.asObservable();\n\n    private flagSource = new BehaviorSubject<Object>([]);   // form finish edit and switch the flag\n    currentFlag = this.flagSource.asObservable();\n\n    // formValueMap will replace it\n    private formValue = new BehaviorSubject<Object>([]);   // pass form value to ng-tree, for root\n    currentFormValue = this.formValue.asObservable();\n\n    private formValueMap: BehaviorSubject<Map<string, string>> = new BehaviorSubject<Map<string, string>>(new Map<string, string>());\n    // currentFormValueMap: Observable<Map<string, string>> = this.formValueMap;\n    currentFormValueMap: Observable<Map<string, string>> = this.formValueMap.asObservable();\n\n    constructor() { }\n\n    // ng-tree send sessionStorage to form\n    editSessionStorage(storageInput) {\n        this.storageSource.next(storageInput);\n    }\n\n    passNodeVal(nodeVal) {  // drag & drop, pass the root name\n        this.dragdropNode.next(nodeVal);\n    }\n\n    changeFlag(flagInput) { // form edit object and store, change flag into true\n        this.flagSource.next(flagInput);\n    }\n\n    // formValueMap will replace it\n    passFormValue(formValueInput) {    // pass form value to ng-tree, for root\n        this.formValue.next(formValueInput);\n    }\n\n    // add formValue into shared FormValueMap\n    setFormValue(key: string, value: string): void {\n        this.formValueMap.next(this.formValueMap.getValue().set(key, value));\n    }\n\n    // get formValue from FromValueMap\n    getFormValue(): Map<string, string> {\n        return this.formValueMap.getValue();\n    }\n\n}\n","module.exports = \"/* ProfileEditorComponent's private CSS styles */\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  padding-top: 24px;\\n}\\nlabel {\\n  display: block;\\n  width: 15em;\\n  margin: .5em 0;\\n  color: #607D8B;\\n  font-weight: bold;\\n}\\ninput {\\n  height: 2em;\\n  font-size: 1em;\\n  padding-left: .4em;\\n}\\n/*\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n*/\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #ccc;\\n  cursor: auto;\\n}\\n/*\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VuZXJhdGUtZm9ybS9nZW5lcmF0ZS1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0RBQWdEO0FBQ2hEO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsY0FBYztFQUNkLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCO0FBQ0E7Ozs7Ozs7OztDQVNDO0FBQ0Q7RUFDRSx5QkFBeUI7QUFDM0I7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBR0E7Ozs7Q0FJQyIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYXRlLWZvcm0vZ2VuZXJhdGUtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogUHJvZmlsZUVkaXRvckNvbXBvbmVudCdzIHByaXZhdGUgQ1NTIHN0eWxlcyAqL1xuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbn1cblxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDE1ZW07XG4gIG1hcmdpbjogLjVlbSAwO1xuICBjb2xvcjogIzYwN0Q4QjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbmlucHV0IHtcbiAgaGVpZ2h0OiAyZW07XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBwYWRkaW5nLWxlZnQ6IC40ZW07XG59XG4vKlxuYnV0dG9uIHtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiovXG5idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZkOGRjO1xufVxuXG5idXR0b246ZGlzYWJsZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBjb2xvcjogI2NjYztcbiAgY3Vyc29yOiBhdXRvO1xufVxuXG5cbi8qXG5Db3B5cmlnaHQgMjAxNy0yMDE4IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG5Vc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0XG5jYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwOi8vYW5ndWxhci5pby9saWNlbnNlXG4qLyJdfQ== */\"","module.exports = \"<h2 *ngIf = \\\" className !== '' \\\">Form of {{ className }}</h2>\\n\\n<form [formGroup] = \\\"form_receive\\\" (ngSubmit) = \\\"output2()\\\">\\n    <ng-container *ngFor = \\\"let key of MemberKey\\\">\\n        <label *ngIf = \\\"key!=='@id' && key!=='@type'\\\">\\n            {{ key }} :\\n            <input *ngIf = \\\" MemberStyle[key] !== 'textarea' \\\" type = {{MemberStyle[key]}} formControlName = {{key}} droppable (onDrop) = \\\" onNodeDrop($event) \\\">\\n            <textarea *ngIf = \\\" MemberStyle[key] ==='textarea' \\\" formControlName = {{key}} droppable (onDrop) = \\\" onNodeDrop($event) \\\"></textarea>\\n        </label>\\n    </ng-container>\\n    <br>\\n    <button type=\\\"submit\\\" class=\\\"btn-dark col-md-8\\\">Output object</button>\\n</form>\\n<br>\\n<br>\\n<button (click)=\\\"store()\\\" class=\\\"btn-dark col-md-8\\\" width=\\\"15em\\\">Store</button>\\n<br>\\n<button (click)=\\\"clearForm()\\\" class=\\\"btn-dark col-md-8\\\" width=\\\"15em\\\">Clear Form</button>\\n<br>\\n<button (click)=\\\"outputAll()\\\" class=\\\"btn-dark col-md-8\\\" width=\\\"15em\\\">Output All Object</button>\\n\\n<!--\\n<p>\\n  Form Value: {{ form_receive.value | json }}\\n</p>\\n-->\\n\\n<button (click)=\\\"clearSession()\\\" class=\\\"btn-dark col-md-8\\\" width=\\\"15em\\\">Clear Session Storage</button>\"","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, DoCheck} from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { FormGroupName } from '@angular/forms';\r\nimport { GenerateFormService } from './generate-form.service';\r\nimport { stringify } from 'querystring';\r\nimport { store, template } from '@angular/core/src/render3';\r\nimport { createOfflineCompileUrlResolver } from '@angular/compiler';\r\nimport { clearModulesForTest } from '@angular/core/src/linker/ng_module_factory_loader';\r\nimport { FormDataService } from '../form-data.service';\r\nimport { FormDataInterface } from '../form-data-interface';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-generate-form',\r\n  templateUrl: './generate-form.component.html',\r\n  styleUrls: ['./generate-form.component.css']\r\n})\r\nexport class GenerateFormComponent implements OnInit, OnChanges {\r\n\r\n    @Input() generate_form_receive;\r\n    MemberKey = [];     // defaultValue: generate_form_receive[0]\r\n    MemberStyle = {};   // styleNode\r\n    MemberType = {};    // typeNode. use for list\r\n    ValueTemp;          // for CheckStrToNum, store form value afthe this function\r\n    form_receive = this.fb.group({});\r\n    className = '';\r\n\r\n    storageIndex = 1;\r\n    storageMap = new Map<string, number>(); // <class-name, count>: record class' count\r\n    idMap = new Map<string, string>();      // <sessionStorage-key, @id>: store id for @ref-using\r\n    checkMap = new Map<string, boolean>();  // <sessionStorage-key, used/wait>: for @ref, if used then just put @ref & @type\r\n    storageTypeMap = new Map<string, Object>(); // <element-name, memberType>: for jsog generate list, need to check if type is list or not\r\n    formValueMap = new Map<string, string>();   // <session-key, object in string>\r\n    isJsogMap = new Map<string, boolean>(); // (discard) <session-key, isJsog>: for jsogForSessionStorage, if it already been jsog or not\r\n    jsog;\r\n    dropNodeVal;\r\n\r\n    // replace storageTypeMap\r\n    javaStorageTypeMap; // Map<session-key-type-name: string, session-key-type-value: string>: store java type\r\n    formValueMap$; // get FromValueMap\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private subCreate: GenerateFormService,\r\n        private formDataService: FormDataService,\r\n        private formDataInterface: FormDataInterface ) {\r\n        /*subCreate.getJavaStorageType().subscribe(response => {\r\n            this.javaStorageTypeMap = response;\r\n        });*/\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.formDataService.currentNode.subscribe(nodeIn => this.dropNodeVal = nodeIn);\r\n        this.formDataInterface.currentFormValueMap.subscribe(formValueMapInput => this.formValueMap$ = formValueMapInput);\r\n        this.subCreate.getJavaStorageType().subscribe(response => {\r\n            this.javaStorageTypeMap = response;\r\n        });\r\n    }\r\n\r\n    CheckStrToNum(input) {  // input = this.form_receive.value (Object)\r\n        const className = input['@type'];\r\n        const javaType = JSON.parse(this.javaStorageTypeMap[className]);\r\n        for (const key in javaType) { // change string default value to number\r\n            if (javaType[key] === 'byte' || javaType[key] === 'short' || javaType[key] === 'int' ||\r\n                javaType[key] === 'long' || javaType[key] === 'float' || javaType[key] === 'double' ||\r\n                javaType[key] === 'Byte' || javaType[key] === 'Short' || javaType[key] === 'Integer' ||\r\n                javaType[key] === 'Long' || javaType[key] === 'Float' || javaType[key] === 'Double') {\r\n                input[key] = +input[key];   // string to number\r\n            }\r\n        }\r\n        return input;\r\n    }\r\n\r\n    // drop node value from ng-tree\r\n    onNodeDrop(e: any) {\r\n        e.dragData = this.dropNodeVal;\r\n        const nodeName = e.nativeEvent.target.attributes['ng-reflect-name'].nodeValue;\r\n        // console.log('e.nativeEvent.target.attributes: ', e.nativeEvent.target.attributes['ng-reflect-name'].nodeValue);\r\n        const tempType = this.MemberType[ nodeName ];\r\n        console.log('tempType: ', tempType);\r\n        const tempTypeArray = tempType.split(' ');\r\n        if (tempTypeArray[0] === 'List' || tempTypeArray[0].includes('[]')) {   // list or array in java, use json list to store\r\n            if (e.nativeEvent.target.type === 'text' || e.nativeEvent.target.type === 'textarea') {\r\n                if (e.nativeEvent.target.value === '') {\r\n                    e.nativeEvent.target.value = this.dropNodeVal;\r\n                    this.form_receive.value[nodeName] = e.nativeEvent.target.value;\r\n                } else {\r\n                    const str = ', '.concat(this.dropNodeVal);\r\n                    e.nativeEvent.target.value = e.nativeEvent.target.value + str;\r\n                    this.form_receive.value[nodeName] = e.nativeEvent.target.value;\r\n                }\r\n            }\r\n        } else {\r\n            e.nativeEvent.target.value = this.dropNodeVal;\r\n            this.form_receive.value[nodeName] = e.nativeEvent.target.value;\r\n        }\r\n        // console.log('e: ', e);\r\n    }\r\n\r\n    // receieve the class info form create component\r\n    ngOnChanges() {\r\n        if ( !(this.generate_form_receive instanceof Array) ) {\r\n            this.generate_form_receive = JSON.parse(this.generate_form_receive);\r\n        }\r\n        this.MemberKey = Object.keys(this.generate_form_receive[0]);    // for html, don't delete\r\n        this.MemberStyle = this.generate_form_receive[1];   // styleNode\r\n        this.MemberType = this.generate_form_receive[2];    // typeNode\r\n        this.className = this.generate_form_receive[3];\r\n        this.form_receive = this.fb.group(this.generate_form_receive[0]);\r\n        console.log('generate_form_receive: ', this.generate_form_receive);\r\n        console.log('MemberKey: ', this.MemberKey);\r\n        console.log('MemberStyle: ', this.MemberStyle);\r\n        console.log('MemberType: ', this.MemberType);\r\n        console.log('className: ', this.className);\r\n    }\r\n\r\n    jsogForSessionStorage(jsonInput: Object, typeCheck: Object) { // jsonInput(object): k-v pair of form, typeCheck: ob of outer ob's type\r\n        // jsonInput-> { name: yang } typeCheck-> { age: long }\r\n        // jsonInput-> { children:[p1, p2] } typeCheck-> { children: list PersonDemo }\r\n        console.log('jsonInput: ', jsonInput);\r\n        const tempKey = Object.keys(jsonInput); //  age, children\r\n        const tempVal = Object.values(jsonInput);  // 1, [p1, p2], [1, 2], [\"1\", \"2\"]\r\n        const tempType = typeCheck[tempKey.toString()]; // long, list PersonDemo, list int, list string\r\n\r\n        if ( tempVal.toString() === '') {   // no value, put null\r\n            return null;\r\n        }\r\n        if (tempType === 'byte' || tempType === 'short' || tempType === 'int' || tempType === 'long' // number, output directly\r\n            || tempType === 'float' || tempType === 'double' || tempType === 'Byte' || tempType === 'Short'\r\n            || tempType === 'Integer' || tempType === 'Long' || tempType === 'Float' || tempType === 'Double') {\r\n                return +tempVal;\r\n        } else if (tempType === 'boolean' || tempType === 'Boolean') {    // true & false\r\n            if (tempVal.toString() === 'true') {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {    // list or string\r\n            const tempTypeArray = tempType.split(' ');  // split the type-value to array\r\n            if (tempTypeArray[0] === 'List' || tempTypeArray[0].includes('[]')) { // list or array variable in java, use json list store\r\n                const tempListVal = [];\r\n                const tempSingleVal = tempVal.toString().split(', ');   // value split with ', '\r\n                if ((tempSingleVal.length === 1) && (tempSingleVal[0] === '')) {\r\n                    return tempListVal; // list have nothing, return empty list\r\n                }\r\n                for (let i = 0; i < tempSingleVal.length; i++ ) {\r\n                    if (sessionStorage.getItem(tempSingleVal[i]) !== null) {   // sessionStorage has it. [p1, p2] list persondemo\r\n                        if (this.checkMap.has(tempSingleVal[i])) { // used, add as @ref\r\n                            const temp = {};\r\n                            const refType = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@type'];\r\n                            temp['@ref'] = this.idMap.get(tempSingleVal[i]);\r\n                            temp['@type'] = refType;\r\n                            tempListVal[i] = temp;\r\n                            // console.log('tempListVal[i]: ', tempListVal[i]);\r\n                        } else {    // haven't used it yet, set checkMap to true, and write it\r\n                            this.checkMap.set(tempSingleVal[i], true);\r\n                            // const typein = this.storageTypeMap.get(tempSingleVal[i]);\r\n                            console.log('JSON.parse(sessionStorage.getItem(tempSingleVal[i])): ',\r\n                                JSON.parse(sessionStorage.getItem(tempSingleVal[i])));\r\n                            /*if (this.isJsogMap.has(tempSingleVal[i])) { // sessionStorage already been jsog, use it directly\r\n                                tempListVal[i] = JSON.parse(sessionStorage.getItem(tempSingleVal[i]));\r\n                                console.log('////////////////////////////////isJSOG/////////////////////////');\r\n                            } else {    // a new object\r\n                                const typein = JSON.parse(this.javaStorageTypeMap[tempSingleVal[i]]);\r\n                                tempListVal[i] = this.jsogGen(JSON.parse(sessionStorage.getItem(tempSingleVal[i])), typein);\r\n                            }*/\r\n                            const typeInJsog = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@type'];\r\n                            const typein = JSON.parse(this.javaStorageTypeMap[typeInJsog]);\r\n                            tempListVal[i] = this.jsogGen(JSON.parse(this.formValueMap$.get(tempSingleVal[i])), typein);\r\n                            console.log('tempListVal[i]: ', tempListVal[i]);\r\n                            // console.log('checkMap', this.checkMap);\r\n                        }\r\n                    } else if (tempTypeArray[1] === 'byte' || tempTypeArray[1] === 'short' || tempTypeArray[1] === 'int'\r\n                        || tempTypeArray[1] === 'long' || tempTypeArray[1] === 'float' || tempTypeArray[1] === 'double'\r\n                        || tempTypeArray[1] === 'Byte' || tempTypeArray[1] === 'Short' || tempTypeArray[1] === 'Integer'\r\n                        || tempTypeArray[1] === 'Long' || tempTypeArray[1] === 'Float' || tempTypeArray[1] === 'Double') {\r\n                            // [1, 2] list int, change it to number\r\n                            tempListVal[i] = +tempSingleVal[i];\r\n                    } else if (tempTypeArray[1] === 'Boolean' || tempTypeArray[1] === 'boolean') {    // [t, f, t, f] list boolean\r\n                        console.log('tempSingleVal.toString: ', tempSingleVal[i].toString());\r\n                        if (tempSingleVal[i].toString() === 'true') {\r\n                            tempListVal[i] = true;\r\n                        } else {\r\n                            tempListVal[i] = false;\r\n                        }\r\n                    } else {    // [\"1\", \"2\"] list string\r\n                        tempListVal[i] = tempSingleVal[i];\r\n                        // console.log('tempListVal: ', tempListVal);\r\n                    }\r\n                }\r\n                console.log('tempListVal: ', tempListVal);\r\n                return tempListVal;\r\n            } else {    // string represent object\r\n                const StrTempVal = tempVal.toString();\r\n                if (sessionStorage.getItem(StrTempVal) !== null) {   // sessionStorage has it.\r\n                    let reVal: any;\r\n                    if (this.checkMap.has(StrTempVal)) { // used, add as @ref\r\n                        const temp = {};\r\n                        const refType = JSON.parse(sessionStorage.getItem(StrTempVal))['@type'];\r\n                        temp['@ref'] = this.idMap.get(StrTempVal);\r\n                        temp['@type'] = refType;\r\n                        reVal = temp;\r\n                    } else {    // haven't used it yet, set checkMap to true, and write it\r\n                        this.checkMap.set(StrTempVal, true);\r\n                        // const typein = this.storageTypeMap.get(StrTempVal);\r\n                        const typein = JSON.parse(this.javaStorageTypeMap[JSON.parse(sessionStorage.getItem(StrTempVal))['@type']]);\r\n                        // reVal = this.jsogGen(JSON.parse(sessionStorage.getItem(StrTempVal)), typein);\r\n                        // reVal = this.jsogGen(this.formValueMap.get(StrTempVal), typein);\r\n                        reVal = this.jsogGen(JSON.parse(this.formValueMap$.get(StrTempVal)), typein);\r\n                    }\r\n                    // console.log('reVal: ', reVal);\r\n                    return reVal;\r\n                } else {\r\n                    return StrTempVal;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // formInput = this.form_receive.value (object); typein: object of outer type from storageTypeMap\r\n    jsogGen(formInput: any, typein: Object) {\r\n        const jsogS = {};\r\n\r\n        const aaa = formInput['@type'].concat(formInput['@id']);\r\n        const bbb = aaa.split('.')[aaa.split('.').length - 1];\r\n        this.checkMap.set(bbb, true);\r\n        for (let i = 0; i < Object.keys(formInput).length; i++) {\r\n            const tempKey = Object.keys(formInput)[i];\r\n            if ( (tempKey !== '@id') && (tempKey !== '@type') ) {\r\n                const single_KV_pair = {};\r\n                single_KV_pair[tempKey] = formInput[tempKey];\r\n                formInput[tempKey] = this.jsogForSessionStorage(single_KV_pair, typein);\r\n            }\r\n            jsogS[tempKey] = formInput[tempKey];\r\n        }\r\n        return jsogS;\r\n    }\r\n\r\n    // (discard) output object and transmit sessionStorage value & form value to server\r\n    output() {\r\n        for (let i = 0; i < sessionStorage.length; i++) {\r\n            this.idMap.set(Object.keys(sessionStorage)[i], JSON.parse(Object.values(sessionStorage)[i])['@id']);\r\n            // this.checkMap.set(Object.keys(sessionStorage)[i], false);\r\n        }\r\n        console.log('idMap ', this.idMap);\r\n        console.log('checkMap', this.checkMap);\r\n        console.log('length ', this.form_receive.value);\r\n\r\n        /* tempType: sessionStorage's class type and index;\r\n           key: split temp and use the last one be the real key */\r\n        /*const tempType = this.form_receive.value['@type'].concat(\r\n            this.storageMap.get(JSON.stringify(this.form_receive.value['@type'])));\r\n        const key = tempType.split('.')[tempType.split('.').length - 1];*/\r\n        const tempType = this.form_receive.value['@type'].concat(this.form_receive.value['@id']);\r\n        const key = tempType.split('.')[tempType.split('.').length - 1];\r\n        console.log('key: ', key);  // print object with class and its class' count\r\n        this.checkMap.set(key, true);\r\n\r\n        console.log('storageTypeMap.get(key): ', this.storageTypeMap.get(key));\r\n        this.jsog = this.jsogGen(this.form_receive.value, this.storageTypeMap.get(key) );\r\n\r\n        this.checkMap.clear();\r\n        console.log('jsog ', this.jsog);\r\n\r\n        // output form value to server ngFormOutput\r\n        this.subCreate.ouputObject( this.jsog ).subscribe(response => {\r\n            console.log('output', response);\r\n        });\r\n\r\n        // sessionStorage pass to server ngSessionStorage\r\n        this.subCreate.outputsessionStorage(sessionStorage).subscribe(response => {\r\n            console.log('ngSessionStorage response', response);\r\n        });\r\n    }\r\n\r\n    // sessionStorage just accept string type key/value\r\n    store() {\r\n        console.log('JSON.stringify(this.form_receive.value): ', JSON.stringify(this.form_receive.value));\r\n\r\n        this.idMap.clear();\r\n        for (let i = 0; i < sessionStorage.length; i++) {\r\n            this.idMap.set(Object.keys(sessionStorage)[i], JSON.parse(Object.values(sessionStorage)[i])['@id']);\r\n            // this.checkMap.set(Object.keys(sessionStorage)[i], false);\r\n        }\r\n\r\n        /* get object type => store object use its type-name and index\r\n         * storageMap: count the same class-name object\r\n         */\r\n        let sessionKey;\r\n        const aaa = this.form_receive.value['@type'].concat(this.form_receive.value['@id']);\r\n        const bbb = aaa.split('.')[aaa.split('.').length - 1];\r\n        if (sessionStorage.getItem(bbb) === null) { // sessionStorage don't have this item, create object\r\n            /*if (this.storageMap.has(JSON.stringify(this.form_receive.value['@type']))) {    // already had the same class object\r\n                let value = this.storageMap.get(JSON.stringify(this.form_receive.value['@type']));\r\n                value++;\r\n                this.storageMap.set(JSON.stringify(this.form_receive.value['@type']), value);\r\n                // this.form_receive.value['@id'] = value; // modified @id with class count\r\n            } else {    // first object of this class\r\n                this.storageMap.set(JSON.stringify(this.form_receive.value['@type']), 1);\r\n                // this.form_receive.value['@id'] = 1;\r\n            }*/\r\n            this.form_receive.value['@id'] = this.storageIndex.toString();\r\n\r\n            const temp = this.form_receive.value['@type'].concat(this.storageIndex);    // use storage count as id postfix\r\n            const key = temp.split('.')[temp.split('.').length - 1];\r\n            // this.formValueMap.set(key, JSON.stringify(this.form_receive.value));\r\n            this.formDataInterface.setFormValue(key, JSON.stringify(this.form_receive.value));\r\n            // this.storageTypeMap.set(key, this.MemberType);\r\n            this.ValueTemp = this.CheckStrToNum(this.form_receive.value);\r\n            console.log('this.ValueTemp: ', this.ValueTemp);\r\n            // console.log('this.storageTypeMap.get(key): ', this.storageTypeMap.get(key));\r\n            this.ValueTemp = this.jsogGen(this.ValueTemp, JSON.parse(this.javaStorageTypeMap[this.form_receive.value['@type']]));\r\n            console.log('after: ', this.ValueTemp);\r\n            sessionStorage.setItem(key, JSON.stringify(this.ValueTemp));\r\n            // this.isJsogMap.set(key, true);\r\n            // sessionStorage.setItem(key, JSON.stringify(this.form_receive.value));\r\n            // console.log('this.storageTypeMap: ', this.storageTypeMap);\r\n            this.storageIndex++;\r\n            sessionKey = key;\r\n        } else {    // sessioinStorage had this item, edit object, overwrite old value\r\n            const temp = this.form_receive.value['@type'].concat(this.form_receive.value['@id']);\r\n            const key = temp.split('.')[temp.split('.').length - 1];\r\n            // this.formValueMap.set(key, JSON.stringify(this.form_receive.value));\r\n            this.formDataInterface.setFormValue(key, JSON.stringify(this.form_receive.value));\r\n            this.ValueTemp = this.CheckStrToNum(this.form_receive.value);\r\n            console.log('this.ValueTemp: ', this.ValueTemp);\r\n            // turn it to jsog then store it\r\n            this.ValueTemp = this.jsogGen(this.ValueTemp, JSON.parse(this.javaStorageTypeMap[this.form_receive.value['@type']]));\r\n            console.log('after: ', this.ValueTemp);\r\n            sessionStorage.setItem(key, JSON.stringify(this.ValueTemp));\r\n            // sessionStorage.setItem(key, JSON.stringify(this.form_receive.value));\r\n            // this.isJsogMap.set(key, true);\r\n            sessionKey = key;\r\n        }\r\n\r\n        for (const k of Object.keys(sessionStorage)) {\r\n            this.checkMap.clear();\r\n            if (k !== sessionKey) {\r\n                const typeIn = JSON.parse(this.javaStorageTypeMap[JSON.parse(sessionStorage.getItem(k))['@type']]);\r\n                console.log('k: ', k, '\\ntypeIn: ', typeIn);\r\n                const jsog = this.jsogGen(JSON.parse(this.formValueMap$.get(k)), typeIn);\r\n                sessionStorage.setItem(k, JSON.stringify(jsog));\r\n            }\r\n        }\r\n        this.clearForm();\r\n        // sessionStorage modified, change flag to ng-tree recomposed\r\n        this.formDataService.changeFlag(true);\r\n        // console.log('this.formValueMap: ', this.formValueMap);\r\n        // this.formDataService.passFormValue(this.formValueMap);\r\n\r\n        // update formValue. let formValueMap shared, replace formDataService.passFormValue to ng-tree\r\n        // this.formDataInterface.addFormValue(sessionKey, JSON.stringify(this.form_receive.value));\r\n\r\n        this.className = '';\r\n        this.MemberKey = [];         // defaultValue: generate_form_receive[0]\r\n        this.MemberStyle = {};    // styleNode\r\n        this.MemberType = {};     // typeNode. use for list\r\n        /*\r\n         * change log:\r\n         * parse into jsog when store.\r\n         * every ob contain other ob, need to check whether it had been used or not, then clear the map.\r\n        */\r\n        this.checkMap.clear();\r\n    }\r\n\r\n    // clear the form data\r\n    clearForm() {\r\n        this.MemberKey = [];\r\n        this.generate_form_receive.value = undefined;\r\n        // this.generate_form_receive = {};\r\n        this.form_receive = this.fb.group({});\r\n        this.className = '';\r\n    }\r\n\r\n    clearSession() {\r\n        sessionStorage.clear();\r\n        this.storageMap.clear();\r\n        // this.storageTypeMap.clear();\r\n        this.storageIndex = 1;\r\n        this.checkMap.clear();\r\n        this.formDataService.changeFlag(true);\r\n    }\r\n\r\n    output2() {\r\n        // output form value to server ngFormOutput\r\n        this.subCreate.ouputObject2(sessionStorage.getItem(this.className)).subscribe(response => {\r\n            console.log('output', response);\r\n        });\r\n        console.log(this.className);\r\n    }\r\n\r\n    outputAll() {\r\n        const all = [];\r\n        for (const value of Object.values(sessionStorage)) {\r\n            all.push(JSON.parse(value));\r\n        }\r\n        console.log('length: ', all.length);\r\n        this.subCreate.outputAll(JSON.stringify(all)).subscribe(response => {\r\n            console.log('output', response);\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateFormService {\n\n    constructor(private http: HttpClient) { }\n\n    outputUrl = '/ngFormOutput';\n    outputAllUrl = '/ngOutputAll';\n    sessionStorageUrl = '/ngSessionStorage';\n    javaStorageTypeUrl = '/ngJavaStorageType';\n\n    httpHeaders = new HttpHeaders({ 'Content-Type': 'text/plain' });\n\n    // (discard)\n    ouputObject(output) {\n        return this.http.post(this.outputUrl, output, { headers: this.httpHeaders, observe: 'response' });\n    }\n\n    ouputObject2(output) {\n        return this.http.post(this.outputUrl, output, { headers: this.httpHeaders, observe: 'response' });\n    }\n\n    outputAll(outputAll) {\n        return this.http.post(this.outputAllUrl, outputAll, { headers: this.httpHeaders, observe: 'response' });\n    }\n\n    outputsessionStorage(session) {\n        return this.http.post(this.sessionStorageUrl, session, { headers: this.httpHeaders, observe: 'response' });\n    }\n\n    getJavaStorageType() {\n        return this.http.get(this.javaStorageTypeUrl);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pzdHJlZS9qc3RyZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div id=\\\"using_json\\\"></div>\\n\"","import { Component, OnInit, AfterViewInit} from '@angular/core';\n// import * as $ from 'jquery';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-jstree',\n  templateUrl: './jstree.component.html',\n  styleUrls: ['./jstree.component.css']\n})\nexport class JstreeComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n      $('#using_json').jstree({\n          'core': {\n              'check_callback': true,\n              'data': [\n                  'Simple root node',\n                  {\n                      'text': 'Root node 2',\n                      'state': {\n                          'opened': true,\n                          'selected': true\n                      },\n                      'children': [\n                          { 'text': 'Child 1' },\n                          'Child 2'\n                      ]\n                  }\n              ]\n          }\n        });\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZGVyL3VwbG9hZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--<form [formGroup]=\\\"uploaderForm\\\" (change)=\\\"ubmit( $event.target.files )\\\">\\n    <label>\\n      choose json file :\\n        <input type=\\\"file\\\" size=\\\"60\\\" accept=\\\".json\\\">\\n    </label>\\n    <button type=\\\"submit\\\">Submit and Store</button>\\n</form>-->\\n\\n\\n<form [formGroup]=\\\"uploader\\\" (change)=\\\"fileChange( $event.target.files )\\\" (ngSubmit)=\\\"upload()\\\">\\n    <label>\\n        choose a json file :\\n        <input type=\\\"file\\\" size=\\\"80\\\" accept=\\\".json\\\" />\\n    </label>\\n    <div class=\\\"mt-3\\\">\\n        <button class=\\\"btn btn-info\\\" type=\\\"submit\\\">upload</button>\\n    </div>\\n</form>\\n<br>\\n<!--\\n<app-generate-form [generate_form_receive]=\\\"fileForm\\\"></app-generate-form>\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { from } from 'rxjs';\nimport { UploaderService } from './uploader.service';\nimport { FormDataInterface } from '../form-data-interface';\nimport { FormDataService } from '../form-data.service';\n\n@Component({\n  selector: 'app-uploader',\n  templateUrl: './uploader.component.html',\n  styleUrls: ['./uploader.component.css']\n})\nexport class UploaderComponent implements OnInit {\n\n    uploader = this.fb.group({});\n    fileToUpload;\n    fileList;   // upload file is stored by list type in js\n\n    upJsog;\n    formValueMap;   // <string-session-key, string-form-value>\n    tempSingleFormValue = {};\n    checkMap = new Map<string, boolean>();  // <sessionStorage-key, used/wait>: for @ref, if used then just put @ref & @type\n    javaStorageTypeMap;\n    uploadFormValue = new Map<string, string>();    // <string-session-key, string-form-value>\n\n    constructor(private fb: FormBuilder,\n        private uploaderService: UploaderService,\n        private formDataInterface: FormDataInterface,\n        private formDataService: FormDataService) {}\n\n    ngOnInit() {\n        this.formDataInterface.currentFormValueMap.subscribe(formValueMapInput => this.formValueMap = formValueMapInput);\n        this.uploaderService.getJavaStorageType().subscribe(response => {\n            this.javaStorageTypeMap = response;\n        });\n    }\n\n    fileChange(fileList) {\n        this.fileList = fileList;\n    }\n\n    upload() {\n        console.log('fileList', this.fileList);\n        this.fileToUpload = this.fileList[0];\n        // console.log('this.fileToUpload.name ', this.fileToUpload.name);\n        const formData = new FormData();\n        formData.append('file', this.fileToUpload, this.fileToUpload.name);\n        console.log('formData', formData);\n        this.uploaderService.uploadFile(formData).subscribe(response => {\n            this.upJsog = response.body;\n            /*const tempType = this.upJsog['@type'].concat(this.upJsog['@id']);\n            const key = tempType.split('.')[tempType.split('.').length - 1];\n            console.log('key: ', key);\n            sessionStorage.setItem(key, JSON.stringify(this.upJsog));*/\n            this.jsogToFormValue_sessionStorage();\n            this.formDataService.changeFlag(true);\n        });\n    }\n\n    // parse jsog into formValue & sessionStorage\n    jsogToFormValue_sessionStorage() {\n        console.log('this.upJsog: ', this.upJsog);\n        if (this.upJsog instanceof Array) { // multiple objects\n            console.log('multiple');\n            for (const element of this.upJsog) {\n                this.createObject(element);\n            }\n        } else if (this.upJsog instanceof Object) { // single object\n            this.createObject(this.upJsog);\n            this.setSessionStorage();\n        }\n    }\n\n    setSessionStorage() {\n        /*for (const  of virtualRoot.data.children) {\n            if (element.pureName === this.editNode.parent.data.pureName) {\n                element.formVal = this.editNode.parent.data.formVal;\n            }\n            this.checkMap.clear();\n            const typeTemp = JSON.parse(this.javaStorageTypeMap[element.formVal['@type']]);\n            formValueTemp = this.jsogGen(formValueTemp, typeTemp);\n            console.log('formValueTemp: ', formValueTemp);\n            sessionStorage.setItem(element.pureName, JSON.stringify(formValueTemp));\n        }*/\n        this.uploadFormValue.forEach((value: string, key: string) => {\n            this.checkMap.clear();\n            value = JSON.parse(value);\n            const typeTemp = JSON.parse(this.javaStorageTypeMap[value['@type']]);\n            console.log('typeTemp: ', typeTemp);\n            const sessionFormValueTemp = this.jsogGen(value, typeTemp);\n            console.log('sessionFormValueTemp: ', sessionFormValueTemp);\n            sessionStorage.setItem(key, JSON.stringify(sessionFormValueTemp));\n        });\n        /*for (let i = 0; i < this.uploadFormValue.size; i++) {\n            this.checkMap.clear();\n            const value;\n            const key;\n            const typeTemp = JSON.parse(this.javaStorageTypeMap[value['@type']]);\n            const sessionFormValueTemp = this.jsogGen(value, typeTemp);\n            console.log('sessionFormValueTemp: ', sessionFormValueTemp);\n            sessionStorage.setItem(key, JSON.stringify(sessionFormValueTemp));\n        }*/\n    }\n\n    createObject(ob: Object) {\n        let temp;\n        let sessionKey;\n        if (ob['@ref'] !== undefined) {\n            temp = ob['@type'].concat(ob['@ref']);\n        } else {\n            temp = ob['@type'].concat(ob['@id']);\n            sessionKey = temp.split('.')[temp.split('.').length - 1];\n            sessionStorage.setItem(sessionKey, JSON.stringify(ob));\n            const tempFormValue = {};\n            for (const [key, value] of Object.entries(ob)) {\n                if (value instanceof Array) {\n                    const tempArrayRepresent = this.createArray(value);\n                    tempFormValue[key] = tempArrayRepresent;\n                } else if (value instanceof Object) {\n                    if (value['@ref'] !== undefined) {  // has @ref\n                        const aaa = value['@type'].concat(value['@ref']);\n                        const bbb = aaa.split('.')[aaa.split('.').length - 1];\n                        tempFormValue[key] = bbb;\n                        // this.createObject(value);\n                        const refOb = JSON.parse(sessionStorage.getItem(bbb));\n                        ob[key] = refOb;\n                        // sessionStorage.setItem(sessionKey, JSON.stringify(ob));\n                    } else {    // has @id\n                        const aaa = value['@type'].concat(value['@id']);\n                        const bbb = aaa.split('.')[aaa.split('.').length - 1];\n                        tempFormValue[key] = bbb;\n                        this.createObject(value);\n                    }\n                } else {    // single string/boolean/number\n                    tempFormValue[key] = value;\n                }\n            }\n            console.log('tempFormValue: ', tempFormValue);\n            this.formDataInterface.setFormValue(sessionKey, JSON.stringify(tempFormValue));\n            this.uploadFormValue.set(sessionKey, JSON.stringify(tempFormValue));\n        }\n\n        /*const tempFormValue = {};\n        for (const [key, value] of Object.entries(ob)) {\n            if (value instanceof Array) {\n                const tempArrayRepresent = this.createArray(value);\n                tempFormValue[key] = tempArrayRepresent;\n            } else if (value instanceof Object) {\n                const aaa = value['@type'].concat(value['@id']);\n                const bbb = aaa.split('.')[aaa.split('.').length - 1];\n                tempFormValue[key] = bbb;\n                this.createObject(value);\n            } else {    // single string/boolean/number\n                tempFormValue[key] = value;\n            }\n        }\n        console.log('tempFormValue: ', tempFormValue);\n        this.formDataInterface.setFormValue(sessionKey, JSON.stringify(tempFormValue));*/\n    }\n\n    createArray(arrayIn) {\n        let arrayRepresent = '';\n        for (let i = 0; i < arrayIn.length; i++) {\n            console.log('element: ', arrayIn[i]);\n            if (arrayIn[i] instanceof Object) { // array of object\n                let aaa;\n                if (arrayIn[i]['@ref'] !== undefined) {\n                    aaa = arrayIn[i]['@type'].concat(arrayIn[i]['@ref']);\n                } else {\n                    aaa = arrayIn[i]['@type'].concat(arrayIn[i]['@id']);\n                    this.createObject(arrayIn[i]);\n                }\n                const bbb = aaa.split('.')[aaa.split('.').length - 1];\n\n                if (i !== arrayIn.length - 1) {\n                    arrayRepresent = arrayRepresent + bbb + ', ';\n                } else {\n                    arrayRepresent = arrayRepresent + bbb;\n                }\n            } else {    // array of string, array of boolean\n                arrayRepresent = arrayRepresent + arrayIn[i];\n            }\n        }\n        console.log('arrayRepresent: ', arrayRepresent);\n        return arrayRepresent;\n    }\n\n    jsogForSessionStorage(jsonInput: Object, typeCheck: Object) { // jsonInput(object): k-v pair of form, typeCheck: ob of outer ob's type\n        // jsonInput-> { name: yang } typeCheck-> { age: long }\n        // jsonInput-> { children:[p1, p2] } typeCheck-> { children: list PersonDemo }\n        // console.log('jsonInput: ', jsonInput);\n        const tempKey = Object.keys(jsonInput); //  age, children\n        const tempVal = Object.values(jsonInput);  // 1, [p1, p2], [1, 2], [\"1\", \"2\"]\n        const tempType = typeCheck[tempKey.toString()]; // long, list PersonDemo, list int, list string\n\n        if (tempVal.toString() === '') {   // no value, put null\n            return null;\n        }\n        if (tempType === 'byte' || tempType === 'short' || tempType === 'int' || tempType === 'long' // number, output directly\n            || tempType === 'float' || tempType === 'double' || tempType === 'Byte' || tempType === 'Short'\n            || tempType === 'Integer' || tempType === 'Long' || tempType === 'Float' || tempType === 'Double') {\n            return +tempVal;\n        } else if (tempType === 'boolean' || tempType === 'Boolean') {    // true & false\n            if (tempVal.toString() === 'true') {\n                return true;\n            } else {\n                return false;\n            }\n        } else {    // list or string\n            const tempTypeArray = tempType.split(' ');  // split the type-value to array\n            if (tempTypeArray[0] === 'List' || tempTypeArray[0].includes('[]')) { // list or array variable in java, use json list store\n                const tempListVal = [];\n                const tempSingleVal = tempVal.toString().split(', ');   // value split with ', '\n                if ((tempSingleVal.length === 1) && (tempSingleVal[0] === '')) {\n                    return tempListVal; // list have nothing, return empty list\n                }\n                for (let i = 0; i < tempSingleVal.length; i++) {\n                    if (sessionStorage.getItem(tempSingleVal[i]) !== null) {   // sessionStorage has it. [p1, p2] list persondemo\n                        if (this.checkMap.has(tempSingleVal[i])) { // used, add as @ref\n                            const temp = {};\n                            const refType = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@type'];\n                            // temp['@ref'] = this.idMap.get(tempSingleVal[i]);\n                            temp['@ref'] = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@id'];\n                            temp['@type'] = refType;\n                            tempListVal[i] = temp;\n                            // console.log('tempListVal[i]: ', tempListVal[i]);\n                        } else {    // haven't used it yet, set checkMap to true, and write it\n                            this.checkMap.set(tempSingleVal[i], true);\n                            // const typein = this.storageTypeMap.get(tempSingleVal[i]);\n                            // const typein = JSON.parse(this.javaStorageTypeMap[tempSingleVal[i]]);\n                            /* sessionStorage already been jsog, use it directly\n                                tempListVal[i] = JSON.parse(sessionStorage.getItem(tempSingleVal[i]));\n                            */\n                            // tempListVal[i] = this.jsogGen(JSON.parse(sessionStorage.getItem(tempSingleVal[i])), typein);\n                            // console.log('checkMap', this.checkMap);\n                            const typeInJsog = JSON.parse(sessionStorage.getItem(tempSingleVal[i]))['@type'];\n                            const typein = JSON.parse(this.javaStorageTypeMap[typeInJsog]);\n                            tempListVal[i] = this.jsogGen(JSON.parse(this.formValueMap.get(tempSingleVal[i])), typein);\n                            console.log('tempListVal[i]: ', tempListVal[i]);\n                        }\n                    } else if (tempTypeArray[1] === 'byte' || tempTypeArray[1] === 'short' || tempTypeArray[1] === 'int'\n                        || tempTypeArray[1] === 'long' || tempTypeArray[1] === 'float' || tempTypeArray[1] === 'double'\n                        || tempTypeArray[1] === 'Byte' || tempTypeArray[1] === 'Short' || tempTypeArray[1] === 'Integer'\n                        || tempTypeArray[1] === 'Long' || tempTypeArray[1] === 'Float' || tempTypeArray[1] === 'Double') {\n                        // [1, 2] list int, change it to number\n                        tempListVal[i] = +tempSingleVal[i];\n                    } else if (tempTypeArray[1] === 'Boolean' || tempTypeArray[1] === 'boolean') {    // [t, f, t, f] list boolean\n                        console.log('tempSingleVal.toString: ', tempSingleVal[i].toString());\n                        if (tempSingleVal[i].toString() === 'true') {\n                            tempListVal[i] = true;\n                        } else {\n                            tempListVal[i] = false;\n                        }\n                    } else {    // [\"1\", \"2\"] list string\n                        tempListVal[i] = tempSingleVal[i];\n                        // console.log('tempListVal: ', tempListVal);\n                    }\n                }\n                console.log('tempListVal: ', tempListVal);\n                return tempListVal;\n            } else {    // string represent object\n                const StrTempVal = tempVal.toString();\n                if (sessionStorage.getItem(StrTempVal) !== null) {   // sessionStorage has it.\n                    let reVal: any;\n                    if (this.checkMap.has(StrTempVal)) { // used, add as @ref\n                        const temp = {};\n                        const refType = JSON.parse(sessionStorage.getItem(StrTempVal))['@type'];\n                        temp['@ref'] = JSON.parse(sessionStorage.getItem(StrTempVal))['@id'];\n                        temp['@type'] = refType;\n                        reVal = temp;\n                    } else {    // haven't used it yet, set checkMap to true, and write it\n                        this.checkMap.set(StrTempVal, true);\n                        // const typein = this.storageTypeMap.get(StrTempVal);\n                        // this.storageTypeMap.get(StrTempVal);\n                        const typein = JSON.parse(this.javaStorageTypeMap[JSON.parse(sessionStorage.getItem(StrTempVal))['@type']]);\n                        // reVal = this.jsogGen(JSON.parse(sessionStorage.getItem(StrTempVal)), typein);\n                        reVal = this.jsogGen(JSON.parse(this.formValueMap.get(StrTempVal)), typein);\n                        // console.log('checkMap', this.checkMap);\n                    }\n                    // console.log('reVal: ', reVal);\n                    return reVal;\n                } else {\n                    return StrTempVal;\n                }\n            }\n        }\n    }\n\n    // formInput = this.form_receive.value (object); typein: object of outer type from storageTypeMap\n    jsogGen(formInput: Object, typein: Object) {\n        const jsogS = {};\n\n        const aaa = formInput['@type'].concat(formInput['@id']);\n        const bbb = aaa.split('.')[aaa.split('.').length - 1];\n        this.checkMap.set(bbb, true);\n        for (let i = 0; i < Object.keys(formInput).length; i++) {\n            const tempKey = Object.keys(formInput)[i];\n            if ((tempKey !== '@id') && (tempKey !== '@type')) {\n                const single_KV_pair = {};\n                single_KV_pair[tempKey] = formInput[tempKey];\n                formInput[tempKey] = this.jsogForSessionStorage(single_KV_pair, typein);\n            }\n            jsogS[tempKey] = formInput[tempKey];\n        }\n        return jsogS;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploaderService {\n\n    uploadUrl = '/ngUploader';\n    javaStorageTypeUrl = '/ngJavaStorageType';\n\n    constructor(private http: HttpClient) { }\n\n    uploadFile(upload) {\n        return this.http.post(this.uploadUrl, upload, { observe: 'response' });\n    }\n\n    getJavaStorageType() {\n        return this.http.get(this.javaStorageTypeUrl);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}